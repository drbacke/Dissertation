#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass dlrreport
\use_default_options true
\maintain_unincluded_children false
\language ngerman
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language german
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Einleitung
\end_layout

\begin_layout Section
Motivation
\end_layout

\begin_layout Standard
Der Luftverkehr im Fracht- und Passagierbereich ist in den letzten Jahren
 sehr stark angestiegen.
 Gleichzeitig steigt auch der weltweite Energieverbrauch 
\begin_inset CommandInset citation
LatexCommand cite
key "BPp.l.c.2016"

\end_inset

.
 In beiden Bereichen stellen Turbomaschinen eine sehr wichtige technische
 Komponente dar.
 Das Thema Klimaschutz ist zunehmend in den Vordergrund gerückt.
 Die Politik stellt hier sehr hohe Anforderungen, welche bei der Auslegung
 von Turbomaschinen mit berücksichtigt werden müssen.
 Außerdem herrscht ein sehr hoher Konkurrenz- und Preisdruck unter den Triebwerk
s- und den Energiemaschinenherstellern.
 Diese konkurrierenden Anforderungen machen die Auslegung von Turbomaschinen
 zu einer sehr großen Herausforderung für Forschung und Industrie und erfordern
 bereits während des Auslegungsprozesses ein besonderes Augenmerk auf Emissionen
, Effizienz, Betriebs- und Wartungskosten.
\end_layout

\begin_layout Standard
Um diesen Problemen zu begegnen, sind moderne CFD- und Optimierungsverfahren
 ein sehr wichtiges Werkzeug.
 Sie erlauben es, die komplexen Strömungsvorgänge in Turbomaschinen am Computer
 zu simulieren und unter Berücksichtigung multipler Ziele und Nebenbedingungen
 zu optimieren.
 Diese noch relativ neuen Werkzeuge führen zu einer Verlagerung von sehr
 kostspieligen experimentellen Untersuchungen hin zu Simulationen am Computer
 durch CFD-Verfahren.
 Heutzutage werden experimentelle Untersuchungen vermehrt zur Validierung
 und Kalibrierung von CFD-Verfahren verwendet und finden zudem Anwendung
 im Bereich der Grundlagenforschung von Strömungsphänomenen.
 
\begin_inset Newline newline
\end_inset

Durch die neuen numerischen Verfahren wurden die Auslegungszyklen im Turbomaschi
nenbereich in den letzten Jahren massiv beschleunigt.
 Allerdings sind die genutzten Verfahren mit einem so hohen numerischen
 Aufwand verbunden, dass vereinfachte CFD-Modelle verwendet werden.
 Durch diese Vereinfachungen können diese Modelle allerdings nicht alle
 physikalischen Phänomene auflösen.
 
\end_layout

\begin_layout Standard
Um diesem Problem zu begegnen, werden zunehmend sehr große HPC-Cluster eingesetz
t, um die benötigte Rechenleistung zur Verfügung zu stellen.
 Solch ein Cluster ist allerdings sehr kostspielig und die Optimierungs-
 und CFD-Verfahren müssen auf die sehr spezielle Hardware von solchen Clustern
 angepasst werden.
 Diese Problemstellung ist so komplex, dass sich daraus ein eigener Forschungszw
eig entwickelt hat.
 Dennoch ist man trotz der enormen Rechenleistung, die moderne HPC-Cluster
 bieten, immer noch auf stark vereinfachte CFD-Modelle und hocheffiziente
 Optimierungsverfahren angewiesen.
 Beispielsweise ist man von dem Ziel ein vollständiges Flugzeug inklusive
 Antrieb am Rechner zeitlich aufgelöst zu simulieren und zu optimieren noch
 sehr weit entfernt.
 Selbst die Optimierung eines vollständigen Triebwerks ist mit den momentan
 zur Verfügung stehenden Ressourcen nicht durchführbar.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

In der beschriebenen Problemstellung liegt auch die Motivation dieser Arbeit.
 Es soll ein industriell nutzbares Optimierungsverfahren vorgestellt werden,
 welches es ermöglichen soll, höherwertigere CFD-Verfahren innerhalb der
 Auslegung von Gasturbinen zu verwenden.
 Hierfür wird ein effizientes Optimierungsverfahren entwickelt und getestet,
 wobei ein besonderes Augenmerk auf die industrielle HPC-Hardwareumgebung
 und eine hohe numerische Effizienz gelegt wird.
 Durch dieses Verfahren soll es in Zukunft ermöglicht werden, deutlich komplexer
e numerische Simulationen innerhalb von automatisierten Optimierungen zu
 verwenden.
 
\end_layout

\begin_layout Section
Stand der Forschung
\end_layout

\begin_layout Standard
Industriell genutzte Optimierungsverfahren für den Turbomaschinenbereich
 sind schon seit längerer Zeit ein umfangreiches Forschungsgebiet und Thema
 zahlreicher Arbeiten und Forschungsbeiträge.
 Eine vollständige Übersicht der vorhandenen Literatur ist daher nahezu
 unmöglich.
 Dennoch soll dem Leser ein kurzer Überblick über einige aktuelle Forschungsarbe
iten im Bereich der Turbomaschinenoptimierung geboten werden.
 
\end_layout

\begin_layout Standard
Bei Optimierungen im Turbomaschinenbereich handelt es sich meist um nichtlineare
 mehrdimensionale multidisziplinäre Mehrziel-Optimierungsprobleme mit Nebenbedin
gungen.
 Es werden oftmals Geometrien für Turbomaschinenkomponenten gesucht, welche
 einen besonders hohen Wirkungsgrad aufweisen.
 In der Regel unter Einhaltung aerodynamischer, mechanischer, akustischer
 oder anderer Restriktionen.
 Aufgrund der Komplexität der hier beschriebenen Optimierungsprobleme sind
 in den letzten Jahren zahlreiche Optimierungsverfahren für die Turbomaschinenau
slegung entwickelt worden.
 Innerhalb dieses Abschnitts sollen die in der Turbomaschinenforschung aktuell
 verwendeten Verfahren kurz beschrieben und mit Literatur belegt werden.
 Zu diesem Zweck wird zu jedem Verfahren zuerst allgemeine Übersichtsliteratur
 vorgestellt.
 Daraufhin folgen dann einige Veröffentlichungen von industrienahen Anwendungen
 dieser Verfahren aus den letzten sieben Jahren.
 
\end_layout

\begin_layout Paragraph*
Optimierungen auf Basis der Evolutionsstrategie:
\end_layout

\begin_layout Standard
Als erstes sollen einige allgemeine Beiträge aus dem Bereich der evolutionären
 Optimierungsalgorithmen vorgestellt werden.
 Bei evolutionären Optimierungsalgorithmen handelt es sich um stochastische
 Optimierungsverfahren, welche der Funktionsweise der natürlichen Evolution
 von Lebewesen nachempfunden wird.
 Im Wesentlichen werden bei einem evolutionären Algorithmus aus einem vorhandene
n Pool bekannter Daten die Besten selektiert, dann rekombiniert und/oder
 mutiert und wieder evaluiert.
 Dieser Prozess wird dann solange durchlaufen, bis ein zufriedenstellendes
 Ergebnis erreicht wird.
 Die Vorteile dieses Verfahrens liegen in der globalen Suche nach einem
 Optimum und darin, dass so gut wie keine Anforderungen an die Zielfunktion
 und Nebenbedingungen gestellt werden.
 Die Zielfunktion muss weder differenzierbar, noch an jeder Stelle auswertbar
 sein.
 Dies macht das Verfahren sehr robust.
 Der größte Nachteil bei dieser Art von Optimierung liegt in der Konvergenzgesch
windigkeit, es sind meist sehr viele Tastschritte nötig, um ein zufriedenstellen
des Optimum zu finden.
 
\end_layout

\begin_layout Standard
Grundlegende Literatur ber evolutionäre Algorithmen bieten zum einen die
 beiden Arbeiten von Holland 
\begin_inset CommandInset citation
LatexCommand cite
key "Holland1975"

\end_inset

 und Rechenberg 
\begin_inset CommandInset citation
LatexCommand cite
key "Rechenberg1973"

\end_inset

, welche den Grundstein der heutigen modernen Algorithmen darstellen.
 Zum anderen bieten die Bücher von Gen et.
 al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Gen2000"

\end_inset

 und Weicker 
\begin_inset CommandInset citation
LatexCommand cite
key "Weicker2015"

\end_inset

 einen umfassenden und aktuellen Überblick über die gesamte Thematik.
 
\end_layout

\begin_layout Standard
Für den Einsatz von evolutionären Algorithmen im Bereich der Turbomaschinenoptim
ierung gibt es zahlreiche Anwendungsbeispiele, bspw.
 die Arbeit von Sozio et.
 al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Sozio2013"

\end_inset

.
 Innerhalb dieser Arbeit wird ein Auslegungsprozess für gegenläufige Axialturbin
en auf Basis eines evolutionären Algorithmus vorgestellt.
 Der beschriebene Auslegungsprozess soll ausgehend von eindimensionalen
 Kenngrößen eine dreidimensionale aerodynamisch optimierte Geometrie erzeugen.
 Um dies zu erreichen verwendet der beschriebene Auslegungsprozess mehrere
 nacheinander durchgeführte evolutionäre Optimierungen.
 Sozio testete den entwickelten Auslegungsprozess an einer gegenläufigen
 Axialturbine und konnte damit eine aerodynamisch sinnvolle dreidimensionale
 Geometrie einer mehrstufigen Axialturbine erzeugen.
 Wobei mechanische Kriterien innerhalb dieser Arbeit allerdings nicht berücksich
tigt werden.
 
\end_layout

\begin_layout Standard
Es gibt noch eine Vielzahl von weiteren interessanten Anwendungsbeispielen.
 Da sich diese Arbeit allerdings mit dem Thema der ersatzmodellgestützen
 Optimierung befasst, sollen diese hier nicht weiter aufgeführt werden.
 
\end_layout

\begin_layout Paragraph*
Beschleunigung von Optimierungen mit Ersatzmodellen:
\end_layout

\begin_layout Standard
Bei Ersatzmodellen handelt es sich um Interpolations- oder Approximationsverfahr
en, welche während einer Optimierung verwendet werden, um Vorhersagen über
 unbekannte Parametersätze zu machen und damit besonders vielversprechende
 Parametersätze zu finden und somit die Optimierung zu beschleunigen.
 Da sich eine Vielzahl an aktuellen Arbeiten mit diesem sehr komplexen Themengeb
iet befassen, soll es dem Leser zuerst ermöglicht werden einen Überblick
 über dieses Themengebiet zu bekommen.
 Hierfür werden folgend einige interessante Übersichtsbeiträge für diesen
 speziellen Bereich der Turbomaschinenoptimierung genannt.
 Als erstes soll ein sehr umfassender Übersichtsbeitrag von Queipo et.
 al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Queipo2005"

\end_inset

 erwähnt werden.
 Dieser befasst sich unter anderem mit initialen Sampling Prozessen, der
 Auswahl richtiger Ersatzmodelle für verschiedene Anwendungen und deren
 Verwendung innerhalb von multidisziplinären Optimierungen.
 Eine weitere sehr interessante Übersichtsarbeit bietet Simpson et.
 al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Simpson2008"

\end_inset

.
 In diesem Beitrag wird die historische Entwicklung von ersatzmodellgestützten
 multidisziplinären Optimierungen innerhalb der letzten 20 Jahre beschrieben.
 Weiterhin bietet der Beitrag von Forrester et.
 al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "forrester2009recent"

\end_inset

 einen technisch detaillierten Einblick in diesen Bereich und beschreibt
 mehrere Ersatzmodellverfahren und deren Anwendung im Luft- und Raumfahrtbereich.
 
\end_layout

\begin_layout Standard
Im Folgenden sollen einige aktuelle Anwendungen von ersatzmodellbeschleunigten
 Optimierungen aus dem Turbomaschinenbereich genannt werden.
 Verstraete et.
 al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Verstraete2014"

\end_inset

 zeigt die erfolgreiche Anwendung von Neuronalen Netzwerken bei der Optimierung
 eines Diffusors einer Niederdruckdampfturbine.
 Die Zielfunktionen dieser Optimierung sind zum einen die Erhöhung des Wirkungsg
rads und zum anderen die Erweiterung des Betriebsbereichs der Maschine.
 Das verwendete Optimierungsverfahren wird im Von Karman Institut in Belgien
 entwickelt und in den Arbeiten von Pierret 
\begin_inset CommandInset citation
LatexCommand cite
key "Pierret1998,Pierret1999"

\end_inset

 und Verstraete et.
 al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Verstraete2008"

\end_inset

 beschrieben.
 Eine weitere interessante Optimierung einer hochbelasteten Fan-Stufe bietet
 die Arbeit von Aulich et.
 al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "AULICH"

\end_inset

.
 Innerhalb dieser Arbeit wird die Optimierung einer Fan-Stufe mit über 230
 Design Parametern und zahlreichen Nebenbedingungen beschrieben.
 Das dort angewendete Verfahren ist ein durch Ordinary-Kriging beschleunigter
 evolutionärer Algorithmus, welcher im Deutschen Zentrum für Luft- und Raumfahrt
 entwickelt wird.
 Beim Ordinary-Kriging handelt es sich um ein robustes statistisches Interpolati
onsverfahren.
 Ein statistisches Interpolationsverfahren sagt nicht nur den reinen Funktionswe
rt voraus, sondern eine statistische Verteilung dessen.
 Praktisch bedeutet dies, dass eine Abschätzung über den Fehler der Vorhersage
 gemacht werden kann.
 Diese Information kann in einem Optimierungsverfahren gewinnbringend eingesetzt
 werden und wird oft mit EGO für Efficient Global Optimization abgekürzt.
 Wichtige Beiträge zu diesem Verfahren liefern die Arbeiten von Jones et.
 al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Jones1998"

\end_inset

, Keane 
\begin_inset CommandInset citation
LatexCommand cite
key "keane2006statistical"

\end_inset

 und Aulich 
\begin_inset CommandInset citation
LatexCommand cite
key "AULICH"

\end_inset

.
 Die Anwendung einer solchen EGO-Optimierung findet sich in der Arbeit von
 Voß et.
 al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Voss2014"

\end_inset

, in diesem Beitrag wird eine aeromechanische Optimierung eines transsonischen
 Radialverdichters beschrieben
\begin_inset Note Comment
status open

\begin_layout Plain Layout
Mehr
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Eine weitere Anwendung des EGO-Algorithmus wird in der Arbeit von Lepot
 et.
 al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Lepot2011"

\end_inset

 dargestellt.
 In dieser Arbeit wird die aeromechanische Optimierung eines gegenläufigen
 offenen Rotors unter Berücksichtigung von akustischen Kriterien beschrieben.
 
\begin_inset Note Comment
status open

\begin_layout Plain Layout
Mehr
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die Anwendung einer ersatzmodellgestützten Optimierung zum allgemeinen Vergleich
 einer gegenläufigen und einer konventionellen Fanstufe wird in der Dissertation
 von Lengyel 
\begin_inset CommandInset citation
LatexCommand cite
key "Lengyel-Kampmann2015"

\end_inset

 dargestellt.
 Der Vergleich beruht hier auf einer ersatzmodellgestützten Optimierung,
 dabei sollte der Wirkungsgrad der Stufe optimiert werden, bei einer Gleichverte
ilung von Machzahl und Druckverhältnis.
 Durch diese Technik lässt sich eine optimale Wirkungsgradfläche über Machzahl
 und Druckverhältnis auffinden.
 So konnten innerhalb dieser Arbeit allgemeingültigere Vergleiche über die
 Effizienz einer solchen Fanstufe angestellt werden.
 In der Arbeit von Baert et.
 al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Baert2015"

\end_inset

, werden mehrere Verfahren zur Optimierung von variablen Parameterräumen
 auf Basis von Ersatzmodellen getestet.
 Der Test wurde an einem Bypass Kanal mit OGVs und Struts durchgeführt,
 wobei jeder dieser Struts durch eine eigene Geometrie beschrieben wird.
 
\begin_inset Note Comment
status open

\begin_layout Plain Layout
Mehr
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Eine andere Sicht auf ersatzmodellgestützte Optimierungen bietet der Beitrag
 von Chahine et.
 al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Chahine2012"

\end_inset

.
 Dieser vergleicht eine ersatzmodellgestützte mit einer evolutionsbasierten
 Optimierung.
 Als Basis dient eine Radialverdichteroptimierung, welche einmal mit und
 einmal ohne Beschleunigung durch Neuronale Netzwerke.
\begin_inset Note Comment
status open

\begin_layout Plain Layout
Umformulieren
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In dieser Arbeit liefert der rein evolutionäre Algorithmus in kürzerer Zeit
 bessere Ergebnisse.
 Dieses Ergebnis ist allerdings verwunderlich, da die Verwendung von Ersatzmodel
len zur Beschleunigung von evolutionären Optimierungsverfahren als besonders
 effizientes Verfahren gilt.
 Es gilt hier aber zu beachten, dass die Effizienz Neuronaler Netzwerke
 äußerst abhängig von deren Aufbau und Struktur ist.
 Dies ist auch Gegenstand zahlreicher aktueller Forschungsarbeiten im Bereich
 des maschinellen Lernens, bspw.
 die Arbeit von Silver et.
 al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Silver2016"

\end_inset

.
 Dennoch zeigt das Ergebnis sehr deutlich, dass die Effizienz von Optimierungen
 mit Ersatzmodellen sehr unterschiedlich ausfallen kann und stark von den
 verwendeten Optimierungsverfahren, Ersatzmodellen und auch der Anwendung
 abhängt.
 Ersatzmodelle können eine Optimierung stark beschleunigen, allerdings wird
 auch die Komplexität des Verfahrens durch den Einsatz von Ersatzmodellen
 deutlich erhöht.
 Dies erfordert in der Regel einen erfahrenen Anwender zur Überwachung solcher
 Optimierungen.
\end_layout

\begin_layout Paragraph*
Gradienteninformation in Optimierungen:
\end_layout

\begin_layout Standard
Weiterhin beschäftigt sich ein ein großer Teil der aktuellen Forschungsbeiträge
 mit der Verwendung von Gradienteninformation in Optimierungen.
 Moderne Strömungslöser und die dazugehörige Software, wie z.B.
 Rechennetzgeneratoren, bieten immer häufiger die Berechnung partieller
 Ableitungen von Funktionalen, wie z.B.
 Wirkungsgrad nach geometrischer Deformation an.
 Die numerischen Kosten für die Bestimmung mehrerer partieller Ableitungen
 befinden sich hierbei in einer ähnlichen Größenordnung wie die Strömungslösung
 selbst.
 Die Nutzung dieser Gradienteninformation kann innerhalb einer Optimierung
 direkt verwendet werden.
 Dies wird erreicht, indem von einem beliebigen Startpunkt in Gradientenrichtung
 abgestiegen wird und so sehr schnell ein Minimum gefunden werden kann.
 Eine andere Möglichkeit ist die Verwendung von Ersatzmodellen.
 Einige Ersatzmodelle können die vorhandene Gradienteninformation zur Verbesseru
ng der Vorhersagen heranziehen und bieten den Vorteil, dass keine vollständige
 Gradienteninformation vorhanden sein muss.
 Dies ist wichtig, da in den meisten Turbomaschinenoptimierungen für einige
 Funktionale keine Gradienteninformation verfügbar sind.
\end_layout

\begin_layout Standard
Ein aktuelles Beispiel in diesem Bereich ist die Arbeit von Willeke et.
 al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Willeke2015"

\end_inset

.
 Innerhalb dieser Arbeit wird eine Optimierung beschrieben, welche den Druckverl
ust eines Kühlkanals mithilfe eines Gradientenabstiegverfahrens optimiert
 und mit einem rein evolutionären Algorithmus vergleicht.
 Bei dem angestellten Vergleich konnte sich das Gradientenverfahren als
 das schnellere Verfahren behaupten.
 
\end_layout

\begin_layout Standard
Ein weiterer Vergleich wird in dem Beitrag von Tang 
\begin_inset CommandInset citation
LatexCommand cite
key "Tang2016"

\end_inset

 angestellt.
 Verglichen wird eine ersatzmodellgestützte Optimierung mit einem Gradientenabst
iegsverfahren.
 Das verwendete Ersatzmodell basiert auf Radialen Basisfunktionen, welche
 die vorhandene Gradienteninformation verarbeiten kann.
 Diese können als eine Art Vereinfachung des in dieser Arbeit verwendeten
 Kriging-Verfahrens angesehen werden.
 Tang kommt in seiner Arbeit zu dem Schluss, dass die ersatzmodellgestützte
 Optimierung für diese Anwendung ein besseres Optimum erzielt, da das Abstiegsve
rfahren nur sehr lokal nach einem Minimum sucht.
 
\end_layout

\begin_layout Standard
Erwähnenswert sind innerhalb der Verfahren der gradientenbasierten Turbomaschine
noptimierung auch die sogenannten One-Shot-Verfahren.
 Im Gegensatz zu den klassischen Optimierungsverfahren wird hier innerhalb
 des Iterationsverfahrens einer Strömungssimulation eine optimale Geometrie
 gesucht.
 Hierfür sind innerhalb der Lösung ebenfalls Gradienteninformationen notwendig
 und das verwendete Rechennetz muss deformiert werden.
 Diese Verfahren sind in der Regel um ein Vielfaches schneller als klassische
 Optimierungsansätze.
 Allerdings sind multidisziplinäre Problemstellungen, instationäre Strömungslösu
ngen und auch Berechnungen mit verschiedenen gekoppelten Simulationsverfahren
 eine sehr große Herausforderung.
 Daher bieten diese Verfahren oftmals nicht die benötigte Flexibilität einer
 
\begin_inset Quotes gld
\end_inset

konventionellen
\begin_inset Quotes grd
\end_inset

 Optimierung.
 Für eine aktuelle und umfassende Übersicht in dem Bereich der One-Shot
 Verfahren sei hier auf die Disseration von Ozkaya 
\begin_inset CommandInset citation
LatexCommand cite
key "Ozkaya2014"

\end_inset

 verwiesen.
 
\end_layout

\begin_layout Paragraph*
Multifidelity Verfahren:
\end_layout

\begin_layout Standard
Innerhalb dieser Arbeit soll ebenfalls ein ersatzmodellgestütztes Verfahren
 entwickelt werden.
 Dieses Verfahren soll in der Lage sein, während einer Optimierung verschiedene
 Gütestufen von Daten mit Hilfe von Ersatzmodellen zu verarbeiten.
 Eine mögliche Gütestufen ist z.B.
 die örtliche Diskretisierung eines zu simulierenden Strömungskanals in
 der Form eines Rechengitters.
 Je nach Anzahl der Zellen dieses Netzes werden einige Strömungsphänome
 besser aufgelöst, was allerdings mit einer erheblich gesteigerten Rechenzeit
 bezahlt werden muss.
 Der Anwender muss also vor einer Optimierung immer einen Kompromiss treffen,
 zwischen Genauigkeit und Geschwindigkeit.
 
\end_layout

\begin_layout Standard
In der Regel sind die Gütestufen stark korreliert, oftmals aber verzerrt,
 verschoben oder skaliert.
 Es wäre also ein Verfahren wünschenswert, welches diese verschiedenen Gütestufe
n verarbeiten kann und die Transferfunktion zwischen den Gütestufen automatisch
 auffindet.
 Ein solches Verfahren wird Multifidelity-Verfahren genannt und basiert
 in der Regel auf entsprechenden Ersatzmodellen.
 Die einfachste Möglichkeit eines solchen Ersatzmodells stellen sogenannte
 Brückenfunktionen dar.
 Eine solche Brückenfunktion wird aus zwei Ersatzmodellen gebildet, wobei
 das eine nur die niedrigere Stufe darstellt und das andere die Differenz
 zwischen hoher und niedriger Stufe wiedergibt.
 Addiert man die Vorhersagen beider Modelle, so bekommt man eine Vorhersage
 für die höchste Gütestufe unter Berücksichtigung der Niedrigeren.
 Je nach Komplexität der Differenzfunktion können bereits mit sehr wenigen
 Daten der höherwertigen Funktion gute Vorhersagen aus den Daten niedriger
 Güte gewonnen werden.
 Beispielsweise verwendet die bekannte Open-Source Optimierungssoftware
 Dakota solche additiven Brückenfunktionen in der aktuellen Version 6.5 (siehe
 
\begin_inset CommandInset citation
LatexCommand cite
key "Dakota2016"

\end_inset

).
 
\end_layout

\begin_layout Standard
Ein statistisches Verfahren, welches auch komplexere Zusammenhänge beschreiben
 kann, ist das CO-Kriging Ersatzmodell.
 
\begin_inset Note Comment
status open

\begin_layout Plain Layout
Warum ist das CO-Kriging besser? Zusammenhänge zwischen allen Samples aller
 Gütestufen hergestellt
\end_layout

\end_inset

Dieses stellt eine Erweiterung des Ordinary-Kriging dar.
 In der Arbeit von Han et.
 al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Han2010"

\end_inset

 wird ein Vergleich zwischen einem CO-Kriging Modell und einer additiven
 Brückenfunktion angestellt, wobei sich das CO-Kriging Modell als das leistungsf
ähigere herausgestellt hat.
 Wie das Ordinary-Kriging, sagt auch das CO-Kriging Modell eine Verteilung
 voraus und lässt sich damit in dem 
\begin_inset Quotes gld
\end_inset

Efficient Global Optimization
\begin_inset Quotes grd
\end_inset

 Verfahren verwenden.
 Es gibt zahlreiche Umsetzungen des CO-Kriging Verfahrens, wobei die Meisten
 auf der Arbeit von Kennedy und O'Hagan 
\begin_inset CommandInset citation
LatexCommand cite
key "Kennedy2000"

\end_inset

 beruhen.
 Für das CO-Kriging Modell von Kennedy und O'Hagan muss allerdings an jeden
 bekannten Ort der höchsten Gütestufe auch die niedrigere Gütestufe berechnet
 werden.
 Innerhalb dieser Arbeit soll eine CO-Kriging Variation vorgestellt werden,
 die dies nicht benötigt.
 Weitere interessante CO-Kriging Ansätze bietet zum einen die Arbeit von
 Le Gratiet 
\begin_inset CommandInset citation
LatexCommand cite
key "LeGratiet"

\end_inset

, welche eine sehr effiziente Umsetzung der Methode von Kennedy darstellt
 und zum anderen die Arbeiten von Han 
\begin_inset CommandInset citation
LatexCommand cite
key "han2012alternative,Han2010"

\end_inset

.
 
\end_layout

\begin_layout Standard
Neben der technischen Umsetzung des CO-Kriging Verfahrens ist auch die Verwendun
g eines solchen Modells innerhalb einer Multifidelity-Optimierung ein sehr
 wichtiger Punkt.
 Dabei sind die Entscheidung wann welche Gütestufe innerhalb einer laufenden
 Optimierung berechnet wird oder die Daten- und Prozesskettenverwaltung
 die wesentlichen Herausforderungen und beeinflussen die Laufzeit einer
 Optimierung erheblich.
 
\end_layout

\begin_layout Standard
Leider existieren zu dieser Thematik nur sehr wenige Forschungsbeiträge.
 Eine akademische Anwendung bietet hier die Arbeit von Brooks 
\begin_inset CommandInset citation
LatexCommand cite
key "Brooks"

\end_inset

, dieser stellt einen Vergleich zwischen einer Multifidelity-Optimierung
 und einer konventionellen Ordinary-Kriging-Optimierung an.
 Brooks optimierte für diesen Zweck den bekannten NASA Rotor 37 
\begin_inset CommandInset citation
LatexCommand cite
key "Reid1978"

\end_inset

, mit dem Ziel den Wirkungsgrad zu verbessern, bei gleichzeitiger Einhaltung
 des originalen Druckverhältnisses und des Massenstroms.
 Um eine Vergleichbarkeit gewährleisten zu können, stellte Brooks für beide
 Optimierungen dasselbe Rechenbudget zur Verfügung.
 Weiterhin wurde innerhalb der Optimierung bereits ein industriell genutztes
 3D-CFD Verfahren verwendet 
\begin_inset CommandInset citation
LatexCommand cite
key "Lapworth2004"

\end_inset

.
 Abschließend kommt Brooks in seiner Arbeit zu dem Ergebnis, dass die Multifidel
ity-Optimierung bei gleicher Rechenzeit eine höhere Effizienzsteigerung
 erreicht.
 In der durchgeführten Multifidelity-Optimierung konnte eine Effizienzsteigerung
 des Rotors von 2.34% erreicht werden und die Referenzoptimierung erzielte
 eine Steigerung von 1.79%.
 Dieses Ergebnis lässt darauf hoffen, dass bei komplexeren industriellen
 Optimierungen ein deutlicher Geschwindigkeitszuwachs zu erwarten ist.
 
\begin_inset Note Comment
status open

\begin_layout Plain Layout
Christian fragen wegen Zeiten
\end_layout

\end_inset


\end_layout

\begin_layout Section
Anforderungen und Zielsetzung
\end_layout

\begin_layout Standard
Im Rahmen dieser Arbeit soll ein industriell einsetzbares und erweiterbares
 Multifidelity-Optimierungsverfahren entwickelt und getestet werden.
 Das Verfahren soll in die bereits bestehende Optimierungssoftware AutoOpti
 integriert werden und dabei die speziellen Anforderungen im Bereich der
 Turbomaschinenentwicklung berücksichtigen.
 Im Folgenden Abschnitt sollen zuerst die Anforderungen an das entwickelte
 Verfahren herausgearbeitet und daraus folgend eine konkrete Zielsetzung
 bestimmt werden.
\end_layout

\begin_layout Standard
Die Anforderungen lassen sich hierbei in zwei Kategorien unterteilen.
 Die eine Kategorie umfasst die Anforderungen durch die spezielle Problematik
 in der Turbomaschinenauslegung.
 Besonders kritische Punkte sind hierbei die sehr aufwendigen Prozessketten,
 die hochdimensionalen Suchräume und die Vielzahl an auftretenden physikalischen
 Disziplinen.
 Die andere Kategorie betrifft die computertechnischen Anforderungen, wie
 die Unterstützung einer HPC-Umgebung oder eine sinnvolle Integration in
 die bereits vorhandene Software AutoOpti.
 
\end_layout

\begin_layout Subsubsection*
Anforderungen Turbomaschinenoptimierung
\end_layout

\begin_layout Standard
Die speziellen Anforderungen von Turbomaschinenoptimierungen können zusammengefa
sst werden zu folgenden Punkten:
\end_layout

\begin_layout Itemize
Mehrere Zielfunktionen
\end_layout

\begin_layout Itemize
Viele Restriktionen 
\end_layout

\begin_layout Itemize
Unterschiedliche physikalische Disziplinen
\end_layout

\begin_layout Itemize
Hochdimensionale Suchräume 
\end_layout

\begin_layout Itemize
Numerisch sehr aufwendige Prozessketten
\end_layout

\begin_layout Standard
Grundsätzlich werden alle Punkte bereits durch die Optimierungssoftware
 AutoOpti unterstützt.
 Da die Anforderungen an die Turbomaschinenindustrie und damit auch an die
 entsprechenden Optimierungen stetig steigen, werden zukünftig leistungsfähigere
 Optimierungsverfahren benötigt.
 Durch das Multifidelity Verfahren sollen insbesondere die hochdimensionalen
 Suchräume effizienter abgetastet werden können und dadurch auch der Aufwand
 durch die numerisch aufwendigen Prozessketten reduziert werden.
 
\end_layout

\begin_layout Subsubsection*
Software- und Hardwaretechnische Anforderungen
\end_layout

\begin_layout Standard
Die Entwicklung eines solchen Verfahrens bringt auch zahlreiche softwaretechnisc
he Anforderungen mit sich.
 Im folgenden sind die wichtigsten Punkte aufgelistet:
\end_layout

\begin_layout Itemize
Integration in die bestehende Optimierungssoftware AutoOpti
\end_layout

\begin_layout Itemize
Unterstützung einer HPC-Rechnerarchitektur und GPUs
\end_layout

\begin_layout Itemize
Offene objektorientierte Softwarestruktur 
\end_layout

\begin_layout Itemize
Hohe Effizienz des Optimierungsverfahrens, insbesondere des Ersatzmodells
\end_layout

\begin_layout Standard
Die Software AutoOpti wurde vollständig in der Programmiersprache C99 geschriebe
n.
 Zusammen mit der Forderung nach einer objektorientierten Softwarelösung
 wurde für die Entwicklung des neuen Verfahrens die Programmiersprache C++
 inklusive der Verwendung der umfangreichen Boost Bibliothek gewählt.
 Der Vorteil liegt darin, denselben Compiler verwenden zu können und den
 AutoOpti-Entwicklern eine verwandte Sprachumgebung anzubieten.
 
\end_layout

\begin_layout Standard
Weiterhin werden Optimierungen im Turbomaschinendesign aufgrund der komplexen
 numerischen Prozesskette meist auf HPC-Großrechnern ausgeführt.
 Die innerhalb dieser Arbeit entwickelte Software muss innerhalb einer solchen
 Umgebung lauffähig sein.
 In den letzten Jahren ist besonders im HPC-Bereich die Verwendung von GPUs
 für komplexe Rechenaufgaben ein sehr wichtiges Thema geworden.
 Diese Zusatzkarten bieten eine im Vergleich zu herkömmlichen CPUs eine
 größere Rechenleistung bei vergleichsweise niedrigen Energieverbrauch.
 Allerdings benötigen diese GPUs stark parallelisierte SIMD Algorithmen,
 was den Entwicklungsaufwand erhöht.
 Da das in dieser Arbeit entwickelte Optimierungsverfahren selbst sehr aufwendig
 ist und eventuelle Rechenzeiten den Optimierungsverlauf empfindlich stören
 könnten, soll die in dieser Arbeit entwickelte Software durch aktuelle
 GPUs optional beschleunigt werden.
 Zudem sollen aktuelle GPUs mit diesem Verfahren getestet und auf Eignung
 überprüft werden.
 
\end_layout

\begin_layout Standard
Ein weiterer wichtiger Punkt ist die Forderung einer offenen objektorientierten
 Softwarestruktur, um eine spätere Erweiterbarkeit zu gewährleisten.
 
\end_layout

\begin_layout Subsubsection*
Zielsetzung
\end_layout

\begin_layout Standard
Die aus den Anforderungen resultierende Zielsetzung soll in diesem Abschnitt
 beschrieben werden.
 Hierfür werden in der folgenden Auflistung die wichtigsten Ziele dieser
 Arbeit zusammengefasst und im darauffolgenden Text genauer beschrieben.
 
\end_layout

\begin_layout Enumerate
Entwicklung eines CO-Kriging Ersatzmodells
\end_layout

\begin_deeper
\begin_layout Enumerate
Objektorientierte Sprache
\end_layout

\begin_layout Enumerate
Ersatzmodellsoftware muss erweiterbar aufgebaut sein
\end_layout

\begin_layout Enumerate
Prozessinterne synchrone Parallelisierung 
\end_layout

\begin_layout Enumerate
Prozessweite asynchrone Parallelisierung: Client/Server System
\end_layout

\begin_layout Enumerate
GPU-Unterstützung 
\end_layout

\end_deeper
\begin_layout Enumerate
Erweiterung des bisherigen Optimierungsverfahrens
\end_layout

\begin_deeper
\begin_layout Enumerate
Offene Schnittstellen zwischen Optimierer und Ersatzmodellen
\end_layout

\begin_layout Enumerate
Automatisierte Entscheidung zur Laufzeit über die verwendete Gütestufe
\end_layout

\begin_layout Enumerate
Erweiterung der Optimierer-Datenbank auf verschiedene Gütestufen
\end_layout

\begin_layout Enumerate
Erweiterung des Optimierers auf verschiedene Prozessketten für die jeweiligen
 Gütestufen
\end_layout

\end_deeper
\begin_layout Enumerate
Testen des entwickelten Verfahrens an analytischen und auch realitätsnahen
 Beispielen
\end_layout

\begin_layout Enumerate
Praktische Anwendbarkeit an einer industriellen Turbomaschinenoptimierung
 zeigen
\end_layout

\begin_layout Standard
Der erste Punkt umfasst die Entwicklung und Integration eines CO-Kriging
 Ersatzmodells für die AutoOpti Umgebung.
 Das Ersatzmodell soll in einer objektorientierten Sprache programmiert
 werden, wie bereits erwähnt wurde die Sprache C++ gewählt.
 Die Erweiterbarkeit des Verfahrens spielt ebenfalls eine sehr große Rolle,
 zum einen sollen hier alle Kriging Verfahren (Ordinary-, Gradient-Enhanced-,CO-
Kriging) in einer Softwarestruktur untergebracht werden und zum anderen
 sollen auch Klassifikatoren wie z.B.
 Supporting-Vector-Machines in die Software implementiert werden.
 Weitergehend soll die Software über eine prozessinterne synchrone Parallelisier
ung durch Threads verfügen und auch moderne Befehlssatzerweiterungen wie
 SSE unterstützen.
 Eine weitere Möglichkeit der Beschleunigung ist die prozessweite Parallelisieru
ng, damit sollen die notwendigen Berechnungen auch über Rechnergrenzen hinaus
 (bspw.
 auf einem Rechencluster) parallelisierbar sein.
 Dies soll durch ein eigen entwickeltes Client/Server System erfolgen.
 Zudem soll die praktische Anwendbarkeit und der Nutzen eines solchen Verfahrens
 überprüft werden.
 Weiterhin soll eine Beschleunigung durch GPUs möglich sein, womit die notwendig
en Berechnungen für das Ersatzmodell beschleunigt werden sollen.
 
\end_layout

\begin_layout Standard
Der zweite Punkt umfasst die Erweiterung der bestehen Optimierungssoftware
 AutoOpti.
 Grundsätzlich müssen allgemeine Schnittstellen zwischen Optimierer und
 Ersatzmodellen definiert und umgesetzt werden.
 Zudem muss eine automatisierte Strategie entwickelt werden, um während
 einer laufenden Optimierung zu bestimmen, welche Güte in der nächsten Evaluieru
ng verwendet werden soll.
 Die Optimierungssoftware muss außerdem die Daten verschiedener Güte speichern
 und auswerten können und zudem die Verwaltung von unterschiedlichen Prozesskett
en für die jeweiligen Gütestufen übernehmen.
 
\end_layout

\begin_layout Standard
Der dritte Punkt umfasst erste analytische Tests, in denen einzelne Komponenten
 des neuen Verfahrens auf ihre Effizienz und Fehlerfreiheit getestet werden
 sollen.
 
\end_layout

\begin_layout Standard
Der vierte und letzte Punkt, soll die Anwendung des gesamten Verfahrens
 in einer umfangreichen industriellen Turbomaschinenoptimierung darstellen.
 Wobei eine Anwendung mit sehr hohen Prozesskettenlaufzeiten und großen
 Parameterraum gewählt werden soll.
 Die Komplexität soll möglichst hoch sein, sodass man diese Optimierung
 in dieser Form nicht mit einer reinen Single-Fidelity-Optimierung durchführen
 würde.
 
\end_layout

\end_body
\end_document

#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass dlrreport
\use_default_options true
\maintain_unincluded_children false
\language ngerman
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language german
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Fazit und Ausblick
\end_layout

\begin_layout Section*
Fazit
\end_layout

\begin_layout Standard
Mutlfidelity Verfahren ist sehr gewinnbringend und kann vielseitig eingesetzt
 werden.
\end_layout

\begin_layout Enumerate
Entscheidungsfunktion:
\end_layout

\begin_deeper
\begin_layout Enumerate
Konvergenzrate der Fidelities miteinbeziehen, diese kann ser unterschiedlich
 sein
\end_layout

\begin_layout Enumerate
Entscheidung auf einzelnen Prozesse ausweiten.
 CFD LF z.B.
 und FEM HF oder sowas.
 Dynamischer
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Enumerate
Grundlegende Zielsetzung, Entwicklung eines an industriell einsetzbaren
 und erweiterbaren Multifidelity Optimierungsverfahrens
\end_layout

\begin_deeper
\begin_layout Enumerate
Optimierungsverfahren stark ausgerichtet auf den Turbomaschinenbereich,
 bedeutet:
\end_layout

\begin_deeper
\begin_layout Enumerate
Viele Restriktionen
\end_layout

\begin_layout Enumerate
mehrere Zielfunktionen
\end_layout

\begin_layout Enumerate
hochdimensionale Räume
\end_layout

\begin_layout Enumerate
numerisch sehr rechenaufwendige Prozessketten
\end_layout

\begin_layout Enumerate
Prozessketten in verschiedenen Gütestufen
\end_layout

\begin_layout Enumerate
HPC Rechnerarchitektur mit GPUs, 
\end_layout

\end_deeper
\begin_layout Enumerate
Zukünftige Problemstellungn müssen auch bearbeitet werden können
\end_layout

\begin_deeper
\begin_layout Enumerate
GEK-CO Kriging
\end_layout

\begin_layout Enumerate
CO-Kriging fließénde Gütestufen
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Erreicht wird dies durch
\end_layout

\begin_deeper
\begin_layout Enumerate
Eigen entwickeltes CO-Kriging als Ersatzmodell
\end_layout

\begin_layout Enumerate
Erweiterung des bisherigen Optimierungsverfahren auf mehrere Fidelities,
 Entscheidungsfunktionen, Datenbasen usw.
\end_layout

\begin_layout Enumerate
Offenes Softwaredesign
\end_layout

\begin_deeper
\begin_layout Enumerate
SVM müssen umgesetzt werden können
\end_layout

\begin_layout Enumerate
Andere Kriging Verfahren müssen umgesetzt werden können
\end_layout

\begin_layout Enumerate
Danach noch Erweiterbar sein
\end_layout

\begin_layout Enumerate
Objektorientierung
\end_layout

\begin_layout Enumerate
Allgemeine Schnitstellen vom Ersatzmodell zum Optimierer
\end_layout

\begin_layout Enumerate
Unterschiedliche Programmiersprachen 
\end_layout

\end_deeper
\begin_layout Enumerate
Kriging Verfahren Hardwaremäßig
\end_layout

\begin_deeper
\begin_layout Enumerate
CPU-GPU Mixbetrieb muss möglich sein für das Optimierungsverfahren
\end_layout

\begin_layout Enumerate
Client / Server System, um Berechnungunge asynchron und dynamisch zu verteilen.
 Auch auf verschiedenen Architekturen (GPU/CPU)
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
Das wichtigste Ziel, ein in einer industriellen Umgebung einsetzbares Verfahren
 zu entwickeln ist gelungen.
 Dies lässt sich besonders an den sehr komplexen Anwendungen zeigen die
 das in dieser Arbeit entwickelte Verfahren gewinnbringend verwendet haben
\end_layout

\begin_layout Section*
Ausblick
\end_layout

\begin_layout Subsection
Gradient Enhanced CO-Kriging
\end_layout

\begin_layout Standard
Sehr sinnvoll, da oftmals nur wenige HF Member bekannt sind und damit die
 Differenzkovarianzfunktion noch nicht gut geschätzt wird.
 Bekommt man dort nun noch partielle Ableitungen, könnte diese Schätzung
 sehr schnell erfolgen.
 Zudem hätte man die globale Raumabdeckung durch die LF Samples erreicht
 und eine sehr hohe Genauigkeit durch die partiellen Ableitungen.
\end_layout

\begin_layout Standard
Vielleicht nur in den Ausblick!!!!
\end_layout

\begin_layout Subsection
Vorauslegungsverfahren als Modell niedriger Güte testen
\end_layout

\begin_layout Standard
ACDC als Modell niedriger Güte.
 Extremer Zeitunterschied und möglicherweise hoher Informationsgehalt könnte
 die Optimierungen deutlich beschleunigen.
 
\end_layout

\begin_layout Subsection
Wiederverwendung von älteren ähnlichen Optimierungen
\end_layout

\begin_layout Standard
Eine typische Problemstellung in der Entwicklung von Turbomaschinen, sind
 z.B.
 geänderte Randbedingungen oder geänderte Parametrisierung während der laufenden
 Entwicklung.
 Dies kann bspw.
 dazu führen, dass 
\end_layout

\begin_layout Standard
Die Option existiert bereits und wurde an einfachen Tests bereits erfolgreich
 angewandt.
 Allerdings sind noch weitere Tests nötig, um einschätzen zu können inwieweit
 eine Änderung der Randbedingungeun oder der Parametrisierung noch gewinnbringen
d sein kann.
\end_layout

\begin_layout Subsection
Kopplung mehrerer Ersatzmodelle weiterbringen
\end_layout

\begin_layout Standard
Hier wird ein sehr großes Potential gesehen, insbesondere bei der Bewältigung
 sehr großer Parameterräume.
 
\end_layout

\begin_layout Subsection
Stochastic RPROP testen
\end_layout

\begin_layout Standard
Verfahren aus dem Deep-Learning Bereich könnten beim Kriging sinnvoll sein.
 Hier könnte man bspw.
 das RPROP Verfahren immer mit zufällig wechselnden Teilmengen der Trainingsstüt
zstellen trainieren.
 Die Konvergenzzeit sollte dadurch steigen, aber das Verfahren könnte robuster
 werden und auch die einzelnen Iterationsschritte dadurch erheblich schneller
 werden.
 
\end_layout

\begin_layout Subsection
Umgang mit anderen Verteilungen
\end_layout

\begin_layout Standard
Eine Annahme des Kriging-Verfahrens ist die Normalverteilung der Funktionswerte.
 Oftmals ist aber von vornherein bekannt, dass die zu modellierenden Funktionen
 nicht normalverteilt sind.
 Ein gutes Beispiel ist hier der Wirkungsgrad, dieser kann durch seine obere
 Grenze nicht normalverteilt sein.
 Während der Optimierung kann dies zu Schwierigkeiten führen.
 Z.B.
 kann bei der Optimierung auf dem Ersatzmodell dadurch eine gewisse Wahrscheinli
chkeit für Wirkungsgrade über Eins bestehen.
 
\end_layout

\begin_layout Standard
Die Umsetzung anderer Verteilungsfunktionen ist allerdings mit erheblichen
 technischen Aufwand verbunden.
 Zum einen muss das Ersatzmodell angepasst werden und zum anderen der Optimierun
gsalgorithmus selbst.
 Weiterhin 
\end_layout

\end_body
\end_document

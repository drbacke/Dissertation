#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass dlrreport
\use_default_options true
\maintain_unincluded_children false
\language ngerman
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language german
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Einleitung
\end_layout

\begin_layout Section
Motivation
\end_layout

\begin_layout Standard
Der Luftverkehr im Fracht- und Passagierbereich ist in den letzten Jahren
 sehr stark angestiegen.
 Gleichzeitig steigt auch der weltweite Energieverbrauch 
\begin_inset CommandInset citation
LatexCommand cite
key "BPp.l.c.2016"

\end_inset

.
 In beiden Bereichen stellen Turbomaschinen eine sehr wichtige technische
 Komponente dar.
 Das Thema Klimaschutz ist zunehmend in den Vordergrund gerückt.
 Die Politik stellt hier sehr hohe Anforderungen, welche bei der Auslegung
 von Turbomaschinen mit berücksichtigt werden müssen.
 Außerdem herrscht ein sehr hoher Konkurrenz- und Preisdruck unter den Triebwerk
s- und den Energiemaschinenherstellern.
 Diese konkurrierenden Anforderungen machen die Auslegung von Turbomaschinen
 zu einer sehr großen Herausforderung für Forschung und Industrie und erfordern
 bereits während des Auslegungsprozesses ein besonderes Augenmerk auf Emissionen
, Effizienz, Betriebs- und Wartungskosten.
\end_layout

\begin_layout Standard
Um diesen Problemen zu begegnen, sind moderne CFD-, CSM- und Optimierungsverfahr
en ein sehr wichtiges Werkzeug.
 Sie erlauben es, die komplexen Strömungsvorgänge in Turbomaschinen am Computer
 zu simulieren und unter Berücksichtigung multipler Ziele und Nebenbedingungen
 zu optimieren.
 Diese noch relativ neuen Werkzeuge führen zu einer Verlagerung von sehr
 kostspieligen experimentellen Untersuchungen hin zu Simulationen am Computer
 durch CSM- und CFD-Verfahren.
 Heutzutage werden experimentelle Untersuchungen vermehrt zur Validierung
 und Kalibrierung von CFD-Verfahren verwendet und finden zudem Anwendung
 im Bereich der Grundlagenforschung von Strömungsphänomenen.
 
\begin_inset Newline newline
\end_inset

Durch die neuen numerischen Verfahren wurden die Auslegungszyklen im Turbomaschi
nenbereich in den letzten Jahren nicht nur beschleunigt, sondern auch robuster.
 Allerdings sind die genutzten Verfahren mit einem so hohen numerischen
 Aufwand verbunden, dass vereinfachte CFD-Modelle verwendet werden.
 Durch diese Vereinfachungen können diese Modelle allerdings nicht alle
 physikalischen Phänomene auflösen.
\end_layout

\begin_layout Standard
Zur Verwendung von genaueren und damit auch komplexeren Modellen werden
 zunehmend sehr große HPC-Cluster eingesetzt, um die benötigte Rechenleistung
 zur Verfügung zu stellen.
 Solch ein Cluster ist allerdings kostspielig und die Optimierungs- und
 CFD-Verfahren müssen auf die spezielle Hardware von solchen Clustern angepasst
 werden.
 Diese Problemstellung ist so komplex, dass sich daraus ein eigener Forschungszw
eig entwickelt hat.
 Dennoch ist man trotz der enormen Rechenleistung, die moderne HPC-Cluster
 bieten, immer noch auf stark vereinfachte CFD-Modelle und hocheffiziente
 Optimierungsverfahren angewiesen.
 Beispielsweise ist man von dem Ziel, ein vollständiges Flugzeug inklusive
 Antrieb am Rechner zeitlich aufgelöst zu simulieren und zu optimieren noch
 sehr weit entfernt.
 Selbst die Optimierung eines vollständigen Triebwerks ist mit den momentan
 zur Verfügung stehenden Ressourcen nicht durchführbar.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Die wissenschaftliche Herausforderung liegt also in der Anwendung und Weiterentw
icklung von Optimierungsstrategien und der entsprechenden Methoden, welche
 industrielle Anforderungen erfüllen.
 So soll es möglich werden, komplette Komponenten bzw.
 Subsysteme von Gasturbinen auszulegen und zu optimieren.
 Zu diesem Zweck wird ein effizientes Optimierungsverfahren entwickelt und
 getestet, wobei ein besonderes Augenmerk auf die industrielle HPC-Hardwareumgeb
ung und eine hohe numerische Effizienz gelegt wird.
 
\end_layout

\begin_layout Section
Stand der Forschung
\end_layout

\begin_layout Standard
Industriell genutzte Optimierungsverfahren für den Turbomaschinenbereich
 sind schon seit längerer Zeit ein umfangreiches Forschungsgebiet und Thema
 zahlreicher wissenschaftlicher Arbeiten.
 Eine vollständige Übersicht der vorhandenen Literatur ist daher nahezu
 unmöglich.
 Dennoch soll dem Leser ein kurzer Überblick über einige aktuelle Forschungsarbe
iten im Bereich der Turbomaschinenoptimierung gegeben werden.
 
\end_layout

\begin_layout Standard
Bei Optimierungen im Turbomaschinenbereich handelt es sich meist um nichtlineare
, mehrdimensionale, multidisziplinäre Mehrziel-Optimierungsprobleme mit
 einer hohen Zahl an Nebenbedingungen.
 Es werden oftmals Geometrien für Turbomaschinenkomponenten gesucht, welche
 einen besonders hohen Wirkungsgrad aufweisen.
 In der Regel unter Einhaltung aerodynamischer, mechanischer, akustischer
 oder anderer Restriktionen.
 Aufgrund der Komplexität der hier beschriebenen Optimierungsprobleme sind
 in den letzten Jahren zahlreiche Optimierungsverfahren entwickelt und erfolgrei
ch für die Turbomaschinenauslegung eingesetzt worden.
 Innerhalb dieses Abschnitts werden die in der Turbomaschinenforschung aktuell
 verwendeten Verfahren kurz beschrieben und mit Literatur belegt.
 Zu jedem Verfahren wird erst eine allgemeine Übersichtsliteratur vorgestellt
 und anschließend folgen einige Veröffentlichungen zu industrienahen Anwendungen
 dieser Verfahren aus den letzten sieben Jahren.
 
\end_layout

\begin_layout Paragraph*
Optimierungen auf Basis der Evolutionsstrategie:
\end_layout

\begin_layout Standard
Als erstes werden einige allgemeine Beiträge aus dem Bereich der evolutionären
 Optimierungsalgorithmen vorgestellt.
 Bei evolutionären Optimierungsalgorithmen handelt es sich um stochastische
 Optimierungsverfahren, welche der Funktionsweise der natürlichen Evolution
 von Lebewesen nachempfunden wird.
 Im Wesentlichen werden bei einem evolutionären Algorithmus aus einem vorhandene
n Pool bekannter Daten die besten selektiert, anschließend rekombiniert
 und/oder mutiert und wieder evaluiert.
 Dieser Prozess wird solange wiederholt, bis ein zufriedenstellendes Ergebnis
 erreicht ist.
 Die Vorteile dieses Verfahrens liegen in der globalen Suche nach einem
 Optimum ohne dass viele Anforderungen an Zielfunktionen und Nebenbedingungen
 gestellt werden.
 Die Zielfunktion muss weder differenzierbar noch an jeder Stelle auswertbar
 sein.
 Dies macht das Verfahren sehr robust.
 Der größte Nachteil bei dieser Art von Optimierung liegt in der Konvergenzgesch
windigkeit: Es sind meist sehr viele Tastschritte nötig, um ein zufriedenstellen
des Optimum zu finden.
 
\end_layout

\begin_layout Standard
Grundlegende Literatur über evolutionäre Algorithmen bieten zum einen die
 beiden Arbeiten von Holland 
\begin_inset CommandInset citation
LatexCommand cite
key "Holland1975"

\end_inset

 und Rechenberg 
\begin_inset CommandInset citation
LatexCommand cite
key "Rechenberg1973"

\end_inset

, welche den Grundstein der heutigen modernen Algorithmen darstellen.
 Zum anderen bieten die Bücher von 
\begin_inset CommandInset citation
LatexCommand cite
key "Gen2000"

\end_inset

, 
\begin_inset CommandInset citation
LatexCommand cite
key "Weicker2015"

\end_inset

 und 
\begin_inset CommandInset citation
LatexCommand cite
key "gill1981practical,gill2007numerical"

\end_inset

 einen umfassenden und aktuellen Überblick über die gesamte Thematik.
 
\end_layout

\begin_layout Standard
Für den Einsatz von evolutionären Algorithmen im Bereich der Turbomaschinenoptim
ierung gibt es zahlreiche Anwendungsbeispiele.
 Die Arbeit von Sozio et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Sozio2013"

\end_inset

 stellt ein aktuelles und industrienahes Beispiel dar.
 Innerhalb dieser Arbeit wird ein Auslegungsprozess für gegenläufige Axialturbin
en auf Basis eines evolutionären Algorithmus vorgestellt.
 Dieser erzeugt ausgehend von eindimensionalen Kenngrößen eine dreidimensionale,
 aerodynamisch optimierte Geometrie.
 Hierfür nutzt dieser mehrere seriell ausgeführte evolutionäre Optimierungen.
 Sozio et.
 al.
 konnten mit ihrem Auslegungsprozess eine dreidimensionale, aerodynamisch
 sinnvolle Geometrie einer mehrstufigen Axialturbine erzeugen.
 
\end_layout

\begin_layout Standard
Es gibt noch eine Vielzahl von weiteren interessanten Anwendungsbeispielen.
 Da sich diese Arbeit allerdings mit dem Thema der ersatzmodellgestützen
 Optimierung befasst, soll der Fokus auf diese Thematik gelegt werden.
\end_layout

\begin_layout Paragraph*
Beschleunigung von Optimierungen mit Ersatzmodellen:
\end_layout

\begin_layout Standard
Bei Ersatzmodellen handelt es sich um Interpolations- oder Approximationsverfahr
en, welche während einer Optimierung Vorhersagen über unbekannte Parametersätze
 machen können.
 So können besonders vielversprechende Parametersätze schneller gefunden
 werden als bei der Verwendung einer reinen Evolutionsstrategie.
 
\end_layout

\begin_layout Standard
Die Arbeit von Queipo et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Queipo2005"

\end_inset

 befasst sich unter anderem mit der Initialisierung von Optimierungen, der
 Auswahl richtiger Ersatzmodelle für verschiedene Anwendungen und deren
 Verwendung innerhalb von multidisziplinären Optimierungen und bietet damit
 einen sehr umfassenden Überblick über dieses Themengebiet.Betr
\end_layout

\begin_layout Standard
In dem Beitrag von Simpson et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Simpson2008"

\end_inset

 wird die historische Entwicklung von ersatzmodellgestützten multidisziplinären
 Optimierungen innerhalb der letzten 20 Jahre beschrieben.
 Simpson et al.
 kommen zu dem Schluss, dass Herausforderungen wie der 
\begin_inset Quotes gld
\end_inset

Fluch der Dimensionen
\begin_inset Quotes grd
\end_inset

 oder die Komplexität der numerischen Verfahren immer noch dieselben sind
 wie vor 20 Jahren.
 Sie heben allerdings hervor, dass die berechenbare Größe dieser Herausforderung
en deutlich gestiegen ist (vgl.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Simpson2008"

\end_inset

, Seite 14).
 
\end_layout

\begin_layout Standard
Der Beitrag von Forrester et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "forrester2009recent"

\end_inset

 bietet einen technisch fundierten Einblick in diesen Bereich und beschreibt
 mehrere Ersatzmodellverfahren und deren Anwendung im Luft- und Raumfahrtbereich.
 Es wird ebenfalls ein kurzer Einblick in die Nutzung von Gradienteninformation
 und mehreren Gütestufen gegeben.
 
\end_layout

\begin_layout Standard
Verstraete et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Verstraete2014"

\end_inset

 zeigen die erfolgreiche Anwendung von neuronalen Netzwerken bei der Optimierung
 eines Diffusors einer Niederdruckdampfturbine.
 Die durchgeführte Optimierung hat zum einen den Wirkungsgrad erhöht und
 zum anderen den Betriebsbereich der Maschine erweitert.
 Weiterhin wurde die Frage behandelt, inwiefern die Verwendung von mehreren
 Betriebspunkten eine solche Optimierung beeinflusst.
 Das verwendete Optimierungsverfahren wird im Von-Karman-Institut in Belgien
 entwickelt und in den Arbeiten von Pierret 
\begin_inset CommandInset citation
LatexCommand cite
key "Pierret1998,Pierret1999"

\end_inset

 und Verstraete et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Verstraete2008"

\end_inset

 beschrieben.
 Verstraete et al.
 kommen zu dem Schluss, dass die Berücksichtigung mehrerer Betriebspunkte
 den Wirkungsgrad steigert und gleichzeitig eine verbesserte Charakteristik
 des Betriebsverhaltens (vgl.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Verstraete2014"

\end_inset

, Seite 9) erzeugt.
\end_layout

\begin_layout Standard
Die Arbeit von Aulich et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "AULICH"

\end_inset

 beschreibt die Optimierung einer hochbelasteten Fan-Stufe mit über 230
 Design-Parametern und zahlreichen Nebenbedingungen.
 Das dort angewendete Verfahren ist ein durch Ordinary-Kriging beschleunigter
 evolutionärer Algorithmus, welcher im Deutschen Zentrum für Luft- und Raumfahrt
 entwickelt wird.
 Beim Ordinary-Kriging handelt es sich um ein robustes statistisches Interpolati
onsverfahren das nicht nur den reinen Funktionswert voraussagt, sondern
 auch eine statistische Verteilung dessen.
 Praktisch bedeutet dies, dass eine Abschätzung über den Fehler der Vorhersage
 gemacht werden kann.
 Historisch sind die ersten Ansätze statistischer Ersatzmodelle innerhalb
 der mathematischen Geologie 
\begin_inset CommandInset citation
LatexCommand cite
key "cressie1990origins,Cressie1993,matheron1963principles"

\end_inset

 und der Statistik 
\begin_inset CommandInset citation
LatexCommand cite
key "sacks1970statistical"

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "sacks1989design"

\end_inset

 zu finden.
 Die erste Erwähnung der Nutzung dieser Verfahren innerhalb einer globalen
 Optimierung ist in dem Seminarbeitrag von 
\begin_inset CommandInset citation
LatexCommand cite
key "kushner1964new"

\end_inset

 zu finden und wurde dann von vielen Wissenschaftlern aufgegriffen und weiterent
wickelt 
\begin_inset CommandInset citation
LatexCommand cite
key "cox1992statistical,mockus1994application,perttunen1991computational,Jones1998,gibbs1997efficient"

\end_inset

.
 Das EGO-Verfahren (für Efficient Global Optimization) 
\begin_inset CommandInset citation
LatexCommand cite
key "Jones1998,Jones2001"

\end_inset

 hat in modernen Optimierungsalgorithmen besondere Bedeutung erlangt.
 Dieses Verfahren ermöglicht eine gute Balance zwischen der Exploration
 und Exploitation von statistischen Ersatzmodellen innerhalb globaler Optimierun
gen.
 Die Arbeit von Voß et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Voss2014"

\end_inset

 nutzt einen solchen EGO-Algorithmus innerhalb einer aeromechanischen Optimierun
g eines existierenden transsonischen Radialverdichterlaufrades.
 Die durchgeführte Optimierung übertrifft den Wirkungsgrad der ursprünglichen
 Geometrie um ca.
 2% und auch der Sperrmassenstrom wurde um ca.
 7% gesteigert.
 Die darauf aufbauende Arbeit von Elfert et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Elfert2016"

\end_inset

 bestätigt diese Ergebnisse experimentell.
 
\end_layout

\begin_layout Standard
Eine weitere Nutzung des EGO-Algorithmus wird in der Arbeit von Lepot et
 al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Lepot2011"

\end_inset

 dargestellt.
 Es wird die aeromechanische Optimierung eines gegenläufigen offenen Rotors
 unter Berücksichtigung von akustischen Kriterien beschrieben.
 Weitere aktuelle Beiträge zu Anwendungen dieses Verfahrens sind z.B.
 in 
\begin_inset CommandInset citation
LatexCommand cite
key "keane2006statistical,AULICH,Sacks2007,Sacks2007a,forrester2009recent"

\end_inset

 zu finden.
\end_layout

\begin_layout Standard
Die Anwendung einer ersatzmodellgestützten Optimierung zum allgemeinen Vergleich
 einer gegenläufigen und einer konventionellen Fanstufe wird in der Dissertation
 von Lengyel 
\begin_inset CommandInset citation
LatexCommand cite
key "Lengyel-Kampmann2015"

\end_inset

 dargestellt.
 Ziel war es unter Gleichverteilung von Machzahl und Totaldruckverhältnis
 den Wirkungsgrad der Stufe zu optimieren, um die optimale Wirkungsgradfläche
 aufzufinden.
 So konnten innerhalb dieser Arbeit allgemeingültige Vergleiche über die
 Effizienz einer solchen Fanstufe angestellt werden.
 
\end_layout

\begin_layout Standard
In der Arbeit von Baert et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Baert2015"

\end_inset

 wird ein Verfahren zur Optimierung von kontinuierlichen und nicht kontinuierlic
hen Designparametern (z.B.
 ganzzahlige Parameter wie Schaufelzahlen) auf Basis von Ersatzmodellen
 vorgestellt und an einem Bypass-Kanal getestet.
 Baert et al.
 kommen zu dem Schluss, dass diese Art von Ansatz wichtige Design-Entscheidungen
 in die Optimierung integriert (vgl.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Baert2015"

\end_inset

, Seite 11-12) und belegen dies mit der erfolgreichen Optimierung des Bypass-Kan
als.
\end_layout

\begin_layout Standard
Eine andere Sicht auf ersatzmodellgestützte Optimierungen bietet der Beitrag
 von Chahine et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Chahine2012"

\end_inset

.
 Die Autoren stellen den Nutzen von neuronalen-Netzwerken zur Beschleunigung
 von evolutionsbasierten Optimierungen in Frage und belegen diese Aussage
 mit der Vergleichsoptimierung eines Radialverdichters.
 Dieses Ergebnis ist allerdings verwunderlich, da die Verwendung von Ersatzmodel
len zur Beschleunigung von evolutionären Optimierungsverfahren als besonders
 effizientes Verfahren gilt.
 Es sei aber zu beachten, dass die Effizienz neuronaler Netzwerke äußerst
 abhängig von deren Aufbau und Struktur ist.
 Dies ist Gegenstand zahlreicher aktueller Forschungsarbeiten im Bereich
 des maschinellen Lernens, siehe z.B.
 die Arbeit von Silver et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Silver2016"

\end_inset

.
 Verfahren wie das Kriging sind in dieser Hinsicht robuster.
 Dennoch zeigt das Ergebnis sehr deutlich, dass die Effizienz von Optimierungen
 mit Ersatzmodellen sehr unterschiedlich ausfallen kann und stark von den
 verwendeten Optimierungsverfahren, Ersatzmodellen und auch deren Anwendung
 abhängt.
 Ersatzmodelle können eine Optimierung stark beschleunigen, allerdings wird
 die Komplexität des Verfahrens durch den Einsatz von Ersatzmodellen deutlich
 erhöht.
 Dies erfordert in der Regel einen erfahrenen Anwender zur Überwachung solcher
 Optimierungen.
 Innerhalb dieser Arbeit werden Möglichkeiten der Automatisierung und der
 Analyse gezeigt, die diese Verfahren auch einem breiteren Anwenderbereich
 zugänglich machen sollen.
\end_layout

\begin_layout Paragraph*
Gradienteninformation in Optimierungen:
\end_layout

\begin_layout Standard
Viele aktuelle Forschungsbeiträge beschäftigen sich mit der Verwendung von
 Gradienteninformation in Optimierungen.
 Moderne Strömungslöser gestatten immer häufiger die effiziente Berechnung
 partieller Ableitungen von Funktionalen, wie z.B.
 Wirkungsgrad nach geometrischer Deformation.
 Auch die dazugehörige Software (z.B.
 Rechennetzgeneratoren) bieten diese Möglichkeit zunehmend.
 Die numerischen Kosten für die Bestimmung der partiellen Ableitungen befinden
 sich hierbei in einer ähnlichen Größenordnung wie die Strömungslösung selbst.
 In einer Optimierung mit wenig Funktionalen und vielen Parametern, können
 diese Gradienteninformationen gewinnbringend verwendet werden.
 Dies wird erreicht, indem von einem beliebigen Startpunkt in Gradientenrichtung
 abgestiegen wird und somit schnell ein Minimum gefunden werden kann.
 Eine andere Möglichkeit ist die Verwendung von Ersatzmodellen.
 Einige Ersatzmodelle können die vorhandene Gradienteninformation zur Verbesseru
ng der Vorhersagen heranziehen und bieten den Vorteil, dass keine vollständige
 Gradienteninformation vorhanden sein muss.
 Dies ist wichtig, da in den meisten Optimierungen für einige Funktionale
 keine Gradienteninformation verfügbar ist.
\end_layout

\begin_layout Standard
Ein aktuelles Beispiel in diesem Bereich bietet die Arbeit von Willeke et
 al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Willeke2015"

\end_inset

.
 Es wird eine Optimierung beschrieben, welche den Druckverlust eines Kühlkanals
 mithilfe eines Gradientenabstiegverfahrens optimiert und mit einem rein
 evolutionären Algorithmus vergleicht.
 Bei dem angestellten Vergleich konnte sich das Gradientenverfahren als
 das schnellere Verfahren behaupten.
 Weiterhin schreiben Willeke et al., dass die Sorge in ein lokales Minimum
 zu geraten in dem analysierten Testfall nicht relevant ist, da der verwendete
 Ansatz in sehr kurzer Zeit eine ausreichende Verbesserung erzielen konnte
 (vgl.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Willeke2015"

\end_inset

, Seite 11-12).
\end_layout

\begin_layout Standard
Ein weiterer Vergleich wird in dem Beitrag von Tang 
\begin_inset CommandInset citation
LatexCommand cite
key "Tang2016"

\end_inset

 angestellt.
 Verglichen wird eine ersatzmodellgestützte Optimierung mit einem Gradientenabst
iegsverfahren.
 Das verwendete Ersatzmodell basiert auf radialen Basisfunktionen, welche
 vorhandene Gradienteninformation verarbeiten können.
 Tang kommt in seiner Arbeit zu dem Schluss, dass das reine Abstiegsverfahren
 sehr schnell ein lokales Minimum findet und sich nicht sehr weit von der
 initialen Geometrie wegbewegt.
 Das ersatzmodellgestützte Verfahren konnte in derselben Zeit die Region
 des globalen Optimums auffinden (vgl.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Tang2016"

\end_inset

, Seite 12).
\end_layout

\begin_layout Standard
Erwähnenswert sind innerhalb der Verfahren der gradientenbasierten Optimierung
 auch die sogenannten One-Shot-Verfahren.
 Im Gegensatz zu den klassischen Optimierungsverfahren wird hier innerhalb
 des Iterationsverfahrens einer Strömungssimulation eine optimale Geometrie
 gesucht.
 Hierfür sind innerhalb der Lösung ebenfalls Gradienteninformationen notwendig
 und das verwendete Rechennetz muss deformiert werden.
 Diese Verfahren sind in der Regel um ein Vielfaches schneller als klassische
 Optimierungsansätze.
 Allerdings sind multidisziplinäre Problemstellungen, instationäre Strömungslösu
ngen und auch Berechnungen mit verschiedenen gekoppelten Simulationsverfahren
 eine sehr große Herausforderung.
 Daher bieten diese Verfahren oftmals nicht die benötigte Flexibilität einer
 
\begin_inset Quotes gld
\end_inset

konventionellen
\begin_inset Quotes grd
\end_inset

 Optimierung.
 Für eine aktuelle und umfassende Übersicht in dem Bereich der One-Shot-Verfahre
n sei hier auf die Disseration von Özkaya 
\begin_inset CommandInset citation
LatexCommand cite
key "Ozkaya2014"

\end_inset

 verwiesen.
 
\end_layout

\begin_layout Paragraph*
Multifidelity-Verfahren:
\end_layout

\begin_layout Standard
Innerhalb dieser Arbeit wird ein ersatzmodellgestütztes Multifidelity-Verfahren
 entwickelt.
 Dieses Verfahren ist in der Lage, während einer Optimierung verschiedene
 Gütestufen von Daten mit Hilfe von Ersatzmodellen zu verarbeiten.
 Mögliche Gütestufen sind z.B.
 die örtliche Diskretisierung eines zu simulierenden Strömungskanals in
 der Form eines Rechengitters.
 Mit steigender Anzahl der Zellen eines Rechengitters werden Strömungsphänomene
 besser aufgelöst, was allerdings mit einer erheblich gesteigerten Rechenzeit
 bezahlt werden muss.
 Der Anwender muss vor einer Optimierung immer einen Kompromiss zwischen
 Genauigkeit und Geschwindigkeit treffen.
 
\end_layout

\begin_layout Standard
In der Regel sind die Gütestufen stark korreliert, oftmals aber verzerrt,
 verschoben oder skaliert.
 Es ist also ein Ersatzmodell notwendig, welches die Ergebnisse der verschiedene
n Gütestufen verarbeiten kann und die Transferfunktion zwischen den Gütestufen
 automatisch auffindet.
 Die einfachste Möglichkeit eines solchen Ersatzmodells stellen sogenannte
 Brückenfunktionen dar.
 Eine solche Brückenfunktion wird aus zwei Ersatzmodellen gebildet, wobei
 das eine nur die niedrigere Stufe darstellt und das andere die Differenz
 zwischen hoher und niedriger Stufe wiedergibt.
 Addiert man die Vorhersagen beider Modelle, so bekommt man eine Vorhersage
 für die höchste Gütestufe unter Berücksichtigung der Niedrigeren.
 Je nach Komplexität der Differenzfunktion können bereits mit sehr wenigen
 Daten der höherwertigen Funktion gute Vorhersagen aus den Daten niedriger
 Güte gewonnen werden.
 Beispielsweise verwendet die bekannte Open-Source-Optimierungssoftware
 Dakota solche additiven Brückenfunktionen in der aktuellen Version 6.5 (vgl.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Dakota2016"

\end_inset

).
 
\end_layout

\begin_layout Standard
Ein statistisches Verfahren, welches auch komplexere Zusammenhänge beschreiben
 kann, ist das CO-Kriging-Ersatzmodell, hier sei besonders auf die grundlegenden
 Arbeiten von 
\begin_inset CommandInset citation
LatexCommand cite
key "Kennedy2000"

\end_inset

 verwiesen.
 In der Arbeit von Han et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Han2010"

\end_inset

 wird ein Vergleich zwischen einem CO-Kriging-Modell und einer additiven
 Brückenfunktion angestellt, wobei sich das CO-Kriging-Modell als das leistungsf
ähigere herausgestellt hat.
 Ebenso wie das Ordinary-Kriging, sagt auch das CO-Kriging-Modell eine Verteilun
g voraus und lässt sich damit in dem 
\begin_inset Quotes gld
\end_inset

Efficient-Global-Optimization
\begin_inset Quotes grd
\end_inset

 Verfahren verwenden.
 Es gibt bereits Umsetzungen des CO-Kriging Verfahrens, wobei die Meisten
 auf der Arbeit von Kennedy und O'Hagan 
\begin_inset CommandInset citation
LatexCommand cite
key "Kennedy2000"

\end_inset

 beruhen.
 Für dieses CO-Kriging-Modell muss an jeden bekannten Ort der höchsten Gütestufe
 auch eine Stützstelle der niedrigeren Gütestufen vorhanden sein.
 Innerhalb dieser Arbeit wird eine CO-Kriging-Variation vorgestellt, die
 dies nicht benötigt.
 
\end_layout

\begin_layout Standard
Eine effiziente Umsetzung der Methode von 
\begin_inset CommandInset citation
LatexCommand cite
key "Kennedy2000"

\end_inset

 wird in der Arbeit von Le Gratiet 
\begin_inset CommandInset citation
LatexCommand cite
key "LeGratiet"

\end_inset

 dargestellt.
 Weiterhin existieren noch die Arbeiten von Han et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "han2012alternative,Han2010"

\end_inset

 welche allerdings nur mit starken Einschränkungen anwendbar sind (siehe
 Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:VergleicheCoKrigingAndere"

\end_inset

).
 
\end_layout

\begin_layout Standard
Neben der technischen Umsetzung des CO-Kriging-Verfahrens ist auch die Verwendun
g eines solchen Modells innerhalb einer Multifidelity-Optimierung ein sehr
 wichtiger Punkt.
 Dabei sind die Entscheidung, wann welche Gütestufe berechnet wird sowie
 die Daten- und Prozesskettenverwaltung die wesentlichen Herausforderungen.
 
\end_layout

\begin_layout Standard
Leider existieren zu dieser Thematik nur wenige Forschungsbeiträge.
 Eine akademische Anwendung bietet hier die Arbeit von Brooks 
\begin_inset CommandInset citation
LatexCommand cite
key "Brooks"

\end_inset

.
 Diese stellt einen Vergleich zwischen einer Multifidelity-Optimierung und
 einer konventionellen Ordinary-Kriging-Optimierung an.
 Brooks et al.
 optimierten für diesen Zweck den bekannten NASA-Rotor 37 
\begin_inset CommandInset citation
LatexCommand cite
key "Reid1978"

\end_inset

 mit dem Ziel den Wirkungsgrad zu verbessern, wobei das originale Druckverhältni
s und der Massenstrom beibehalten werden sollten.
 Um eine Vergleichbarkeit gewährleisten zu können, stellten Brooks et al.
 für beide Optimierungen dasselbe Rechenbudget zur Verfügung.
 Weiterhin wurde innerhalb der Optimierung ein industriell genutztes 3D-CFD-Verf
ahren verwendet 
\begin_inset CommandInset citation
LatexCommand cite
key "Lapworth2004"

\end_inset

.
 Die Autoren kommen zu dem Ergebnis, dass die Multifidelity-Optimierung
 bei gleicher Rechenzeit eine höhere Effizienzsteigerung erreicht.
 In der durchgeführten Multifidelity-Optimierung konnte eine Steigerung
 des Wirkungsgrads von 2.34% erreicht werden wobei die Referenzoptimierung
 eine Steigerung von 1.79% erzielte.
 Dieses Ergebnis lässt darauf hoffen, dass bei komplexeren industriellen
 Optimierungen ein deutlicher Geschwindigkeitszuwachs zu erwarten ist.
 
\end_layout

\begin_layout Section
Anforderungen und Zielsetzung
\begin_inset CommandInset label
LatexCommand label
name "sec:Anforderungen-und-Zielsetzung"

\end_inset


\end_layout

\begin_layout Standard
Im Rahmen dieser Arbeit wird ein industriell einsetzbares und erweiterbares
 Multifidelity-Optimierungsverfahren entwickelt und getestet.
 Das Verfahren wird in die bereits bestehende Optimierungssoftware AutoOpti
 integriert und die speziellen Anforderungen im Bereich der Turbomaschinenentwic
klung berücksichtigt.
 In diesem Abschnitt werden zuerst die Anforderungen an das entwickelte
 Verfahren herausgearbeitet und daraus folgend eine detaillierte Zielsetzung
 bestimmt.
\end_layout

\begin_layout Standard
Die Anforderungen lassen sich hierbei in zwei Kategorien unterteilen.
 Die eine umfasst die Anforderungen durch die spezielle Problematik in der
 Turbomaschinenauslegung.
 Besonders kritische Punkte sind hierbei die sehr aufwendigen Prozessketten,
 die hochdimensionalen Suchräume und die Vielzahl an auftretenden physikalischen
 Disziplinen.
 Die andere Kategorie betrifft die computertechnischen Anforderungen, wie
 die Unterstützung einer HPC-Umgebung oder eine sinnvolle Integration in
 die bereits vorhandene Software AutoOpti.
 
\end_layout

\begin_layout Paragraph
Anforderungen Turbomaschinenoptimierung
\end_layout

\begin_layout Standard
Die speziellen Anforderungen von Turbomaschinenoptimierungen können wie
 folgt zusammengefasst werden:
\end_layout

\begin_layout Itemize
\noindent
Mehrere Zielfunktionen und physikalische Disziplinen
\end_layout

\begin_layout Itemize
\noindent
Mehrere Restriktionen 
\end_layout

\begin_layout Itemize
\noindent
Partielle Gradienteninformationen
\end_layout

\begin_layout Itemize
\noindent
Hochdimensionale Suchräume 
\end_layout

\begin_layout Itemize
\noindent
Lange Prozesskettenzeiten
\end_layout

\begin_layout Itemize
\noindent
Prozessketten liefern nicht immer Ergebnisse
\end_layout

\begin_layout Standard
Da die Anforderungen an die Turbomaschinenindustrie und damit auch an die
 entsprechenden Optimierungen stetig steigen, werden zukünftig leistungsfähigere
 Optimierungsverfahren benötigt.
 Durch das Multifidelity-Verfahren sollen insbesondere die hochdimensionalen
 Suchräume effizienter abgetastet werden können und dadurch auch der Aufwand
 durch die numerisch aufwendigen Prozessketten akzeptabel werden.
 
\end_layout

\begin_layout Paragraph*
Software- und hardwaretechnische Anforderungen
\end_layout

\begin_layout Standard
Die Entwicklung eines solchen Verfahrens bringt auch zahlreiche softwaretechnisc
he Anforderungen mit sich.
 Im Folgenden sind die wichtigsten Punkte aufgelistet:
\end_layout

\begin_layout Itemize
Integration in die bestehende Optimierungssoftware AutoOpti
\end_layout

\begin_layout Itemize
Unterstützung einer HPC-Rechnerarchitektur mit GPUs (Graphics Processing
 Unit)
\end_layout

\begin_layout Itemize
Offene objektorientierte Softwarestruktur 
\end_layout

\begin_layout Itemize
Hohe Effizienz des Optimierungsverfahrens, insbesondere des Ersatzmodells
\end_layout

\begin_layout Standard
Die Software AutoOpti ist vollständig in der Programmiersprache C99 geschrieben.
 Zusammen mit der Forderung nach einer objektorientierten Softwarelösung
 wurde für die Entwicklung des neuen Verfahrens die Programmiersprache C++
 inklusive der Verwendung der umfangreichen Boost Bibliothek 
\begin_inset CommandInset citation
LatexCommand cite
key "Karlsson2006"

\end_inset

 gewählt.
 Der Vorteil liegt darin, denselben Compiler verwenden zu können und den
 AutoOpti-Entwicklern eine verwandte Sprachumgebung anzubieten.
 
\end_layout

\begin_layout Standard
Weiterhin werden Optimierungen im Turbomaschinendesign aufgrund der komplexen
 numerischen Prozesskette meist auf HPC-Großrechnern ausgeführt.
 Die innerhalb dieser Arbeit entwickelte Software muss in einer solchen
 Umgebung lauffähig sein.
 In den letzten Jahren ist besonders im HPC-Bereich die Verwendung von GPUs
 (graphics processing unit, siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Verwendung-von-GPGPU"

\end_inset

) für komplexe Rechenaufgaben ein sehr wichtiges Thema geworden.
 Diese Zusatzkarten bieten eine im Vergleich zu herkömmlichen CPUs eine
 größere Rechenleistung bei vergleichsweise niedrigem Energieverbrauch.
 Allerdings benötigen diese GPUs stark parallelisierte SIMD-Algorithmen
 (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Streaming-SIMD-Extensions"

\end_inset

), was den Entwicklungsaufwand erhöht.
 Da das in dieser Arbeit entwickelte Optimierungsverfahren selbst sehr aufwendig
 ist und eventuelle Rechenzeiten den Optimierungsverlauf empfindlich stören
 könnten, soll die hier entwickelte Software durch aktuelle GPUs optional
 beschleunigt werden.
 Zudem sollen aktuelle GPUs mit diesem Verfahren getestet und auf Eignung
 überprüft werden.
 
\end_layout

\begin_layout Standard
Ein weiterer wichtiger Punkt ist die Forderung einer offenen objektorientierten
 Softwarestruktur, um eine spätere Erweiterbarkeit zu gewährleisten.
 
\end_layout

\begin_layout Paragraph*
Zielsetzung
\end_layout

\begin_layout Standard
Die aus den Anforderungen resultierende Zielsetzung wird folgend zusammengefasst
 und im Text genauer beschrieben.
 
\end_layout

\begin_layout Enumerate
Entwicklung eines CO-Kriging-Ersatzmodells
\end_layout

\begin_deeper
\begin_layout Enumerate
Objektorientierte Sprache
\end_layout

\begin_layout Enumerate
Ersatzmodellsoftware muss erweiterbar aufgebaut sein
\end_layout

\begin_layout Enumerate
Prozessinterne synchrone Parallelisierung 
\end_layout

\begin_layout Enumerate
Prozessweite asynchrone Parallelisierung: Client/Server System
\end_layout

\begin_layout Enumerate
GPU-Unterstützung 
\end_layout

\end_deeper
\begin_layout Enumerate
Erweiterung des bisherigen Optimierungsverfahrens
\end_layout

\begin_deeper
\begin_layout Enumerate
Offene Schnittstellen zwischen Optimierer und Ersatzmodellen
\end_layout

\begin_layout Enumerate
Automatisierte Entscheidung zur Laufzeit über die verwendete Gütestufe
\end_layout

\begin_layout Enumerate
Erweiterung der Optimierer-Datenbank auf verschiedene Gütestufen
\end_layout

\begin_layout Enumerate
Erweiterung des Optimierers auf verschiedene Prozessketten für die jeweiligen
 Gütestufen
\end_layout

\end_deeper
\begin_layout Enumerate
Testen des entwickelten Verfahrens 
\end_layout

\begin_layout Enumerate
Nachweis der praktischen Anwendbarkeit an einer industriellen Turbomaschinenopti
mierung nachweisen
\end_layout

\begin_layout Standard
Der erste Punkt umfasst die Entwicklung und Integration eines CO-Kriging-Ersatzm
odells für die AutoOpti-Umgebung.
 Das Ersatzmodell soll in einer objektorientierten Sprache programmiert
 werden, hierfür wurde die Sprache C++ gewählt.
 
\end_layout

\begin_layout Standard
Die Erweiterbarkeit des Verfahrens spielt ebenfalls eine sehr große Rolle,
 zum einen werden alle Kriging Verfahren (Ordinary-, Gradient-Enhanced-,CO-Krigi
ng) in einer Softwarestruktur untergebracht und zum anderen werden auch
 Klassifikatoren wie z.B.
 Supporting-Vector-Machines in die Software implementiert.
 Hierfür wird eine moderne Interface-basierte Programmierung verwendet.
 Die in der Literatur beschriebenen Programme beschränken sich in der Regel
 auf einzelne Ersatzmodelle welche oftmals in Frameworks wie Matlab (siehe
 
\begin_inset CommandInset citation
LatexCommand cite
key "Toal2016,Han2010,han2012alternative,Forrester2008"

\end_inset

 umgesetzt sind und bieten daher nicht die Benutzerfreundlichkeit, den Programmu
mfang und die Geschwindigkeit wie für eine industrienahe Umgebung benötigt
 wird.
 
\end_layout

\begin_layout Standard
Weitergehend wird die Software über eine prozessinterne synchrone Parallelisieru
ng durch Threads verfügen und moderne Befehlssatzerweiterungen wie SSE unterstüt
zen.
 Eine weitere Möglichkeit der Beschleunigung ist die prozessweite Parallelisieru
ng.
 Damit sollen die notwendigen Berechnungen auch über Rechnergrenzen hinaus
 (bspw.
 auf einem Rechencluster) parallelisierbar sein.
 Hierfür wurde im Rahmen dieser Arbeit ein asynchrones Client-/Server-System
 entwickelt, welches die Nutzung verschiedener Hardware-Architekturen über
 Rechnergrenzen hinweg erlaubt.
 Zudem soll die praktische Anwendbarkeit und der Nutzen eines solchen Verfahrens
 überprüft werden.
 Weiterhin soll die Verwendung von GPUs möglich sein, womit die notwendigen
 Berechnungen für das Ersatzmodell beschleunigt werden sollen.
 Vergleicht man diese Punkte mit den Softwarepaketen, welche in der Literatur
 beschrieben werden, so kann diese Art der Umsetzung nicht wiedergefunden
 werden.
 Insbesondere ein asynchrones Client/Server System zur Parallelisierung
 und ebenfalls der Mischbetrieb unterschiedlicher Architekturen.
\end_layout

\begin_layout Standard
Der zweite Punkt umfasst die Erweiterung der bestehenden Optimierungssoftware
 AutoOpti.
 Grundsätzlich müssen allgemeine Schnittstellen zwischen Optimierer und
 Ersatzmodellen definiert und umgesetzt werden.
 Eine automatisierte Strategie ist zu entwickeln, um während einer laufenden
 Optimierung zu bestimmen, welche Güte in der nächsten Evaluierung verwendet
 werden soll.
 Hierfür muss der aktuelle Stand der Optimierung und Ersatzmodelle automatisiert
 beobachtet und analysiert werden, um die entsprechende Entscheidung treffen
 zu können.
 Die Optimierungssoftware muss außerdem die Daten verschiedener Güte speichern,
 auswerten können und zudem die Verwaltung unterschiedlicher Prozessketten
 für die jeweiligen Gütestufen übernehmen.
 Die hier vorgestellten Ansätze einer Entscheidungsfunktion sind ebenfalls
 neuartig und unterscheiden sich von anderen Multifidelity-Ansätzen.
 
\end_layout

\begin_layout Standard
Der dritte Punkt umfasst erste analytische Tests, in denen einzelne Komponenten
 des neuen Verfahrens auf ihre Effizienz und Fehlerfreiheit getestet werden
 sollen.
 
\end_layout

\begin_layout Standard
Der vierte und letzte Punkt ist die Beschreibung einiger bereits durchgeführter
 Anwendungen des gesamten Verfahrens in umfangreichen industriehnahen Turbomasch
inenoptimierungen.
 Es sollen insbesondere die Eignung von Multifidelity-Optimierungen für
 verschiedene Anwendungen verglichen werden.
 
\end_layout

\end_body
\end_document

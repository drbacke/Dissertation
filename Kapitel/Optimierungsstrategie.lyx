#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass dlrreport
\use_default_options true
\maintain_unincluded_children false
\language ngerman
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language german
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Optimierungsstrategie für Turbomaschinen
\begin_inset CommandInset label
LatexCommand label
name "chap:Optimierungsstrategie"

\end_inset


\end_layout

\begin_layout Standard
In diesem Kapitel erfolgt eine Einführung in die Turbomaschinenoptimierung.
 Hierfür werden im ersten Teil allgemeine Grundlagen und Begrifflichkeiten
 erklärt, wobei ein Grundwissen über mathematische Optimierungen vorausgesetzt
 wird.
 Im zweiten Teil werden die Besonderheiten und die damit verbundenen Schwierigke
iten der Optimierung von Turbomaschinen erläutert.
 Darauf aufbauend wird im dritten Teil dieses Kapitels die bisher im DLR
 umgesetzte Optimierungsstrategie beschrieben.
 
\end_layout

\begin_layout Section
Grundlagen Turbomaschinenoptimierung 
\end_layout

\begin_layout Standard
Die Auslegung und Optimierung von Turbomaschinen ist eine multidisziplinäre
 Aufgabe, für die verschiedenen Anforderungen aus einer Vielzahl von physikalisc
hen Disziplinen gegeneinander abgewogen und bewertet werden müssen.
 Diese Disziplinen sind für einen sicheren, effizienten und umweltverträglichen
 Betrieb notwendig.
 Zum besseren Verständnis der Komplexität dieser Aufgabenstellung werden
 nachfolgend die wesentlichen Fachdisziplinen aufgelistet und anhand von
 Beispielen erläutert.
\end_layout

\begin_layout Subsection
Ingenieurwissenschaftliche Disziplinen in der Turbomaschinenoptimierung
\begin_inset CommandInset label
LatexCommand label
name "subsec:OptiDisziplinen"

\end_inset


\end_layout

\begin_layout Paragraph*
Aerodynamik:
\end_layout

\begin_layout Standard
Die Aerodynamik von Turbomaschinen kann sich auf verschiedene Baugruppen
 einer Turbomaschine beziehen, bspw.
 den Fan, Verdichter oder die Turbine.
 Ein häufiges Ziel ist z.B.
 das Auffinden einer Geometrie für eine oder mehrere Schaufelreihen, welche
 den Wirkungsgrad (Verhältnis von genutzter Energie zu zugeführter Energie)
 und gleichzeitig auch das Totaldruckverhältnis (Verhältnis vom Totaldruck
 am Austritt der Komponente zum Totaldruck am Eintritt der Komponente) maximiert.
 In der Regel werden zusätzlich Nebenbedingungen definiert, bspw.
 ein bestimmter Abströmwinkel und/oder ein einzuhaltender Betriebsbereich.
 Diese Ziele und Nebenbedingungen müssen für mehrere Betriebspunkte der
 Komponente definiert und eingehalten werden, wodurch sehr viele Nebenbedingunge
n und zu minimierende Funktionale (Zielfunktionen) entstehen können.
 Um diese Kennzahlen zu erhalten, wird aus einem vorher definierten Parametersat
z eine Geometrie erzeugt und diese dann mittels eines CFD-Verfahrens simuliert.
 Dieser Prozess ist numerisch extrem aufwendig und benötigt in der Regel
 mehrere Stunden.
 Bei komplexen Simulationen sind auch Rechenzeiten von mehreren Tagen möglich.
 Einen guten Überblick über diese Problematik bieten die folgenden Literaturstel
len 
\begin_inset CommandInset citation
LatexCommand cite
key "anderson1995computational,Braunling2004,schlichting2006grenzschicht"

\end_inset


\end_layout

\begin_layout Paragraph*
Strukturmechanik:
\end_layout

\begin_layout Standard
Die Strukturmechanik von Turbomaschinen beschäftigt sich mit der Bestimmung
 der mechanischen Belastung der verwendeten Bauteile.
 Hierzu gehören die Berechnung der auftretenden Spannungen in den Schaufeln
 und weiteren Bauteilen (z.B.
 der Scheibe) durch die Fliehkraft- und Druckbelastung.
 Zudem müssen dynamische Problemstellungen beachtet werden.
 Beispielsweise müssen im gesamten Betriebsbereich der Turbomaschine resonante
 Schaufelschwingungen vermieden werden.
 Um dies zu realisieren werden für verschiedene Drehzahlen die Eigenfrequenzen
 und Eigenformen der Schaufelreihen mit modernen CSM-Verfahren berechnet.
 Im Falle einer Turbinenauslegung sind durch die hohen Temperaturen thermomechan
ische Simulationen notwendig, welche den Aufwand nochmals erhöhen.
 Weitere Informationen zu diesem Thema können in 
\begin_inset CommandInset citation
LatexCommand cite
key "Braunling2004,zienkiewicz2005finite,gere1965analysis,przemieniecki1985theory"

\end_inset

 gefunden werden.
\end_layout

\begin_layout Paragraph*
Aeroelastik:
\end_layout

\begin_layout Standard
Die Aeroelastik kann als eine Kopplung zwischen der Aerodynamik und Strukturmech
anik angesehen werden.
 Ein sehr wichtiges Phänomen ist das Schaufelflattern.
 Hierbei handelt es sich um eine aeroelastische Instabilität, die durch
 die Wechselwirkung einer Schaufelschwingung mit den dadurch hervorgerufenen,
 instationären Druckverteilungen auf den Schaufeln verursacht wird.
 Diese instationären aerodynamischen Druckverteilungen können die Schwingung
 entweder dämpfen oder anfachen.
 Im letzten Fall treten selbsterregte Schwingungen auf (Eigenschwingungen)
 und die Schaufel wird instabil.
 Die hierfür notwendigen Berechnungen sind allerdings mit hohem numerischem
 Aufwand verbunden, sodass diese erst nach einer Optimierung für ausgewählte
 Geometrien durchgeführt werden.
 Einen umfassenden Überblick dazu bieten: 
\begin_inset CommandInset citation
LatexCommand cite
key "Hodges2011,bisplinghoff1957aeroelasticity,sechler1952elasticity"

\end_inset


\end_layout

\begin_layout Paragraph*
Aeroakustik:
\end_layout

\begin_layout Standard
Die Aeroakustik beschäftigt sich mit der Entstehung und Ausbreitung aerodynamisc
h erzeugter Geräusche.
 Da es sich bei der Aeroakustik um ein rein instationäres Phänomen handelt,
 ist die Berechnung akustischer Kriterien für eine Optimierung meist zu
 aufwendig.
 Daher wird oftmals auf vereinfachte Modelle zurückgegriffen oder direkt
 Einfluss auf stationäre Strömungsphänomene genommen, von denen man eine
 starke Lärmentstehung vermutet.
 
\end_layout

\begin_layout Standard
Die hier aufgelisteten Fachdisziplinen stellen nur die wesentlichen Disziplinen
 dar, die in einer Turbomaschinenoptimierung auftreten können.
 Dennoch wird ersichtlich, dass durch diese Vielzahl sehr hohe Anforderungen
 an das Optimierungsverfahren sowie den Anwender gestellt werden.
 
\begin_inset CommandInset citation
LatexCommand cite
key "lighthill1952sound,lighthill1954sound"

\end_inset


\end_layout

\begin_layout Subsection
Begriffserläuterungen zu Optimierungen
\begin_inset CommandInset label
LatexCommand label
name "subsec:OptimierungsBegriffe"

\end_inset


\end_layout

\begin_layout Standard
Im Folgenden werden wichtige Begrifflichkeiten zu Optimierungsverfahren
 eingeführt und anhand von Beispielen aus dem Bereich der Turbomaschinenauslegun
g erläutert.
 Für weitere Informationen sei der Leser auf folgende Literaturstellen verwiesen
: 
\begin_inset CommandInset citation
LatexCommand cite
key "miettinen2012nonlinear,ehrgott2005multicriteria,deb2014multi,marler2004survey"

\end_inset


\end_layout

\begin_layout Paragraph*
Zielfunktion oder Fitness:
\end_layout

\begin_layout Standard
Grundsätzlich ist es das Ziel einer Optimierung ein oder mehrere Zielfunktionen
 zu minimieren oder zu maximieren, wobei im Folgenden grundsätzlich von
 einer Minimierung ausgegangen wird.
 Typische Zielfunktionen für die Turbomaschine sind die Erhöhung des Wirkungsgra
ds, die Erweiterung des Betriebsbereichs, die Verminderung von Lärm etc.
 
\end_layout

\begin_layout Paragraph*
Nebenbedingung: 
\end_layout

\begin_layout Standard
Nebenbedingungen werden oftmals als Gültigkeitsintervalle festgelegt, in
 denen die berechneten Größen liegen sollen.
 Beispiele für Nebenbedingungen sind die maximale mechanische Spannung einer
 durch Fliehkraft belasteten Schaufel oder die Einhaltung eines gewissen
 Massenstrombereichs im aerodynamischen Designpunkt.
\end_layout

\begin_layout Paragraph*
Region Of Interest (ROI):
\end_layout

\begin_layout Standard
Ein für eine Zielfunktion oder Nebenbedingung festgelegtes Gültigkeitsintervall.
 
\end_layout

\begin_layout Paragraph*
Freie Variablen:
\end_layout

\begin_layout Standard
Um die Zielfunktion(en) zu optimieren, kann der Optimierungsalgorithmus
 eine bestimmte Anzahl von freien Variablen, innerhalb eines festgelegten
 Intervalls verändern.
 Bei einem Verdichter sind das typischerweise Parameter, welche die Schaufelgeom
etrien beschreiben.
 Beispielsweise die Länge oder Dicke einer Schaufel für eine bestimmte radiale
 Höhe.
 Nach jetzigem Stand sind Optimierungen in der Größenordnung von bis zu
 50-100 freien Variablen üblich.
 In sehr komplexen Optimierungen werden bis zu 250 freie Variablen verwendet,
 siehe 
\begin_inset CommandInset citation
LatexCommand cite
key "AULICH"

\end_inset

.
\end_layout

\begin_layout Paragraph*
Flowparameter:
\end_layout

\begin_layout Standard
Der Begriff 
\begin_inset Quotes gld
\end_inset

Flowparameter
\begin_inset Quotes grd
\end_inset

 gehört grundsätzlich nicht zu den allgemeinen Optimierungsbegriffen, sondern
 wird speziell im DLR-Institut für Antriebstechnik verwendet.
 Da der Begriff dennoch eine gewisse Allgemeingültigkeit bekommen hat, wird
 er in diese Auflistung aufgenommen.
 
\end_layout

\begin_layout Standard
Wird mit einem Satz freier Parameter beispielsweise eine Verdichtergeometrie
 erzeugt und diese im Anschluss aeromechanisch bewertet, so entstehen durch
 das nachfolgende Post-Processing eine Vielzahl von Ergebnisgrößen.
 Oftmals werden hunderte bis tausende an Ergebnisgrößen pro Simulation erzeugt.
 Als Flowparameter bezeichnet man alle Ergebnisgrößen, welche von den genutzten
 numerischen Verfahren erzeugt und im Optimierungsprozess abgespeichert
 werden.
 Aus diesen Flowparametern werden dann die Zielfunktionen und Nebenbedingungen
 berechnet.
 Erfahrungsgemäß werden Optimierungsziele und auch Nebenbedingungen während
 einer laufenden Turbomaschinenoptimierung mehrfach geändert und angepasst.
 Aus diesem Grund ist es wichtig, möglichst alle wesentlichen Ergebnisgrößen
 zu speichern.
 Dies stellt auch die Möglichkeit eines Neustarts oder Wiederaufnehmens
 einer Optimierung sicher.
\end_layout

\begin_layout Paragraph*
Individuum (auch 
\begin_inset Quotes gld
\end_inset

Member
\begin_inset Quotes grd
\end_inset

):
\end_layout

\begin_layout Standard
Ein Tupel freier Parameter 
\begin_inset Formula $\left(x_{1},....,x_{k}\right)$
\end_inset

 mit zugeordneten Flowparametern 
\begin_inset Formula $\left(f_{1},....,f_{z}\right)$
\end_inset

 und Zielfunktionswerten 
\begin_inset Formula $\left(y_{1},....,y_{z}\right)$
\end_inset

 und den Nebenbedingungen 
\begin_inset Formula $\left(w_{1},....,w_{c}\right)$
\end_inset

 eines Optimierungsproblems mit k-dimensionalen Parameterraum, z-dimensionalen
 Zielfunktionsraum und c-dimensionalen Nebenbedingungsraum bezeichnet man
 als Member oder Individuum.
 
\end_layout

\begin_layout Paragraph*
Optimierungsproblem:
\end_layout

\begin_layout Standard
Ein Optimierungsproblem lässt sich mit den vorhergehenden Bezeichnungen
 wie folgt definieren:
\begin_inset Formula 
\begin{align}
\underset{x_{i}\in\left[a_{i},b_{i}\right]\forall i\in\left\{ 1,...,k\right\} }{\min}\left\{ \left.\left(y_{1}\left(\vec{x}\right),....,y_{z}\left(\vec{x}\right)\right)\right|w_{j}\left(\vec{x}\right)\in\left[c_{j};d_{j}\right]\forall j\in\left\{ 1,...,c\right\} \right\} 
\end{align}

\end_inset


\end_layout

\begin_layout Standard
Aus der Formulierung wird ersichtlich, dass dieser Ansatz die Möglichkeit
 bietet, mehrere Ziele gleichzeitig zu verfolgen.
 Da die Ziele oftmals nicht gemeinsam optimiert werden können, weil diese
 z.B.
 widersprüchlich sind, fasst man sie oftmals über Gewichtungsfaktoren als
 gemeinsame Zielfunktion zusammen.
 Diese Faktoren optimal zu bestimmen, ist im Allgemeinen sehr schwierig.
 Um dieses Problem zu umgehen wird in der Regel ein Paretorang-Gütekriterium
 verwendet.
 Damit können mehrere Ziele gleichzeitig optimiert werden, ohne diese gegeneinan
der zu gewichten und so eine Menge an optimalen Lösungen zu finden.
 
\end_layout

\begin_layout Paragraph*
Paretorang und Paretofront:
\end_layout

\begin_layout Standard
Die Begriffe Paretorang und Paretofront sind nach dem Ökonomen und Soziologen
 Vilfredo Pareto (1848–1923) benannt und werden im Folgenden kurz definiert
 (vgl.
 
\begin_inset CommandInset citation
LatexCommand cite
key "pareto1964cours,ehrgott2005multicriteria,miettinen2012nonlinear,Voss2008"

\end_inset

).
 Man sagt, dass ein bewertetes Individuum 
\begin_inset Formula $M_{1}$
\end_inset

 ein Individuum 
\begin_inset Formula $M_{2}$
\end_inset

 dominiert 
\begin_inset Formula $M_{1}\prec M_{2}$
\end_inset

, falls bzgl.
 aller Zielfunktionen gilt: 
\begin_inset Formula 
\begin{align}
M_{1}\prec M_{2}\Longleftrightarrow & y_{i}\left(M_{1}\right)\leq y_{i}\left(M_{2}\right)\forall i\in\left\{ 1,...,z\right\} \label{eq:Dominanz}\\
 & \wedge\exists j\in\left\{ 1,...,z\right\} :y_{j}\left(M_{1}\right)<y_{j}\left(M_{2}\right)
\end{align}

\end_inset

Mit dem Begriff der Dominanz lässt sich der Paretorang 
\begin_inset Formula $P$
\end_inset

 eines Individuums definieren:
\begin_inset Formula 
\begin{equation}
P\left(M\right)\coloneqq\#\left\{ \left.\hat{M}\in M_{all}\right|\hat{M}\prec M\right\} +1
\end{equation}

\end_inset

Der Operator 
\begin_inset Formula $\#$
\end_inset

 gibt die Anzahl einer endlichen Menge an und 
\begin_inset Formula $M_{all}$
\end_inset

 die Menge aller bereits bewerteten Individuen.
 Die Paretofront 
\begin_inset Formula $PF$
\end_inset

 bezeichnet die Teilmenge aus der Menge aller Individuen 
\begin_inset Formula $M_{all}$
\end_inset

 mit Paretorang 
\begin_inset Formula $P=1$
\end_inset

.
 
\begin_inset Formula 
\[
PF\coloneqq\left\{ \left.\hat{M}\in M_{all}\right|P\left(\hat{M}\right)=1\right\} 
\]

\end_inset


\end_layout

\begin_layout Subsection*
Behandlung von Nebenbedingungen
\begin_inset CommandInset label
LatexCommand label
name "par:Behandlung-von-Nebenbedingungen"

\end_inset


\end_layout

\begin_layout Standard
In AutoOpti können Gültigkeitsintervalle für alle gespeicherten physikalischen
 Größen und Zielfunktionen angegeben werden.
 Liegt ein berechnetes Individuum nicht innerhalb dieses Gültigkeitsbereich,
 so wird der Abstand 
\begin_inset Formula $d\left(M\right)$
\end_inset

 des Individuums 
\begin_inset Formula $M$
\end_inset

 zum Gültigkeitsbereich als zusätzliches Gütekriterium herangezogen.
 Die Definition der Dominanz (siehe Gleichung 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Dominanz"

\end_inset

) muss daher erweitert werden zu:
\begin_inset Formula 
\begin{align}
M_{1}\prec M_{2}\Longleftrightarrow & d\left(M_{1}\right)<d\left(M_{2}\right)\vee\left[d\left(M_{1}\right)\leq d\left(M_{2}\right)\right.\label{eq:Domianzn}\\
 & \wedge(y_{i}\left(M_{1}\right)\leq y_{i}\left(M_{2}\right)\forall i\in\left\{ 1,...,z\right\} \nonumber \\
 & \left.\wedge\exists j\in\left\{ 1,...,z\right\} :y_{j}\left(M_{1}\right)<y_{j}\left(M_{2}\right))\right]
\end{align}

\end_inset

Ein Individuum 
\begin_inset Formula $M_{1}$
\end_inset

 dominiert ein Individuum 
\begin_inset Formula $M_{2}$
\end_inset

, wenn der Abstand zum Gültigkeitsbereich verbessert wird oder der Abstand
 zum Gültigkeitsbereich gleich bleibt und gleichzeitig die ursprüngliche
 Definition der Dominanz (siehe Gleichung 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Dominanz"

\end_inset

) erfüllt wird.
 Durch Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Domianzn"

\end_inset

 hat bei der Bestimmung des Paretorangs die Erfüllung der Nebenbedingungen
 Vorrang vor den Zielfunktionswerten.
 
\end_layout

\begin_layout Section
Besondere Herausforderungen bei Turbomaschinenoptimierungen
\begin_inset CommandInset label
LatexCommand label
name "subsec:Besonderheiten-Turbomaschine"

\end_inset


\end_layout

\begin_layout Standard
Die Auslegung und damit auch Optimierung von Turbomaschinen stellt eine
 besondere Herausforderung dar, welche speziell angepasste Optimierungsverfahren
 erfordert.
 In diesem Abschnitt sollen diese Besonderheiten kurz aufgelistet und erläutert
 werden.
\end_layout

\begin_layout Paragraph*
Mehrere Disziplinen:
\end_layout

\begin_layout Standard
Die Anzahl und Komplexität der benötigten physikalischen Disziplinen ist
 sehr hoch.
 Jede Disziplin benötigt in der Regel eine eigene Software, welche aus unterschi
edlichen Quellen stammt.
 Um diese in einer Prozesskette verbinden zu können, müssen oft Anpassungen
 an der Software vorgenommen und Schnittstellen definiert werden.
 Dies erschwert die notwendige Fehlerbehandlung einer Prozesskette erheblich
 und verlangt ein großes Maß an interdiziplinärem Fachwissen.
 
\end_layout

\begin_layout Paragraph*
Mehrere Zielfunktionen und Nebenbedingungen:
\end_layout

\begin_layout Standard
Meist gibt es mehrere Zielfunktionen welche wiederum aus mehreren physikalischen
 Größen zusammengesetzt werden.
 Ein typisches Beispiel ist der Wirkungsgrad 
\begin_inset Formula $\eta_{is}=f\left(P_{t,ein},P_{t,aus},T_{t,ein},T_{t,aus}\right)$
\end_inset

, insbesondere wenn dieser über viele Betriebspunkte gemittelt wird.
 Hinzu kommt, dass die unterschiedlichen Zielfunktionen meist negativ korreliert
 sind und eine große Anzahl relevanter Nebenbedingungen existiert.
 Beim Start einer Optimierung werden diese Nebenbedingungen häufig von keinem
 Individuum vollständig erfüllt und oftmals ist es auch nicht sicher, ob
 die Nebenbedingungen überhaupt alle erfüllbar sind.
 
\end_layout

\begin_layout Standard

\shape italic
Diese Punkte führen dazu, dass eine Optimierung anfangs nur sehr grob definiert
 werden kann und die Ziele und Nebenbedingungen während der laufenden Optimierun
g umformuliert oder angepasst werden müssen.
 Das Optimierungsverfahren muss also auch Änderungen von Zielen und Nebenbedingu
ngen während der laufenden Optimierung zulassen.
\end_layout

\begin_layout Paragraph*
Gradienteninformation:
\end_layout

\begin_layout Standard
Sind die partiellen Ableitungen der Zielfunktion 
\begin_inset Formula $\frac{\partial y_{i}}{\partial x_{j}};i\in\left\{ 1,...,z\right\} $
\end_inset

 oder der Nebenbedingungen 
\begin_inset Formula $\frac{\partial w_{l}}{\partial x_{j}};l\in\left\{ 1,...,c\right\} $
\end_inset

 nach dem Parameter 
\begin_inset Formula $x_{j};j\in\left\{ 1,...,k\right\} $
\end_inset

 mit überschaubaren Rechenaufwand verfügbar, können diese die Optimierung
 stark beschleunigen.
 Allerdings sind oft nicht alle Ableitungen verfügbar, da das Funktional
 nicht differenzierbar ist oder die Programme diese Information nicht zur
 Verfügung stellen.

\shape italic
 Das alles führt dazu, dass das verwendete Optimierungsverfahren auch unvollstän
dige Gradienteninformationen verarbeiten können muss.
 
\end_layout

\begin_layout Paragraph*
Konvergenz der verwendeten Programme:
\end_layout

\begin_layout Standard
Während einer Optimierung werden zahlreiche Geometrien erzeugt.
 Diese Geometrien werden anschließend in der Prozesskette (siehe Abbildung
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:OptiStandardProcess"

\end_inset

) bewertet.
 Die Prozessketten enthalten eine Vielzahl von Rechenschritten, wie z.B.
 die Netzerzeugung und die darauf basierenden aeromechanischen Simulationen.
 Dabei können unsinnige Geometrien oder schlechte Rechennetze entstehen.
 Teils treten auch numerische Probleme oder Programmabbrüche auf, die der
 Anwender nicht direkt analysieren und nachvollziehen kann.
 In vielen Fällen benötigen diese Rechnungen sehr viel Zeit und liefern
 letztlich keine oder nur partielle Informationen.
 Dieses Verhalten darf nicht zum Abbruch der Optimierung führen.
\end_layout

\begin_layout Paragraph*
Lange Prozesskettenzeiten:
\end_layout

\begin_layout Standard
Dieser Punkt ist im Bereich der Turbomaschinenoptimierung sehr entscheidend,
 denn besonders in der Aerodynamik sind die Simulationsverfahren sehr aufwendig.
 
\end_layout

\begin_layout Standard
Trotz der steigenden Rechnerkapazität ist nicht zu erwarten, dass die Prozessket
tenlaufzeiten abnehmen.
 Dies liegt daran, dass für die Berechnung von Strömungen vereinfachte Modelle
 verwendet werden und die steigenden Rechenkapazitäten eher für aufwendigere
 Verfahren eingesetzt werden, um komplexere Strömungsvorgänge simulieren
 zu können.
 
\end_layout

\begin_layout Standard
Ein Optimierungsverfahren sollte also mit so wenig Berechnungen wie möglich
 zu einem gewünschten Ergebnis führen.
 
\end_layout

\begin_layout Paragraph*
Hochdimensionaler Suchraum:
\end_layout

\begin_layout Standard
Die Problematik von hochdimensionalen Suchräumen wird auch als 
\begin_inset Quotes gld
\end_inset

Curse of dimensionality
\begin_inset Quotes grd
\end_inset

 bezeichnet.
 
\end_layout

\begin_layout Standard
Dieser bekannte Begriff entspringt einer Arbeit von Richard Bellman 
\begin_inset CommandInset citation
LatexCommand cite
key "Bellman1972"

\end_inset

.
 Er beschreibt eine Problematik, welche in vielen Bereichen zu finden ist,
 wie z.B.
 bei der Verteilung von Stichproben (Sampling) oder der Optimierung.
 Geht man bspw.
 von einem Raum aus, welcher dicht mit vorhandenen Stichproben besetzt ist,
 so kann dieser nach dem Hinzufügen von weiteren Dimensionen dünn besetzt
 sein und nur noch unzureichend beschrieben werden.
 
\begin_inset CommandInset citation
LatexCommand cite
key "friedman2001elements,trunk1979"

\end_inset


\end_layout

\begin_layout Standard
Die Dimension des Suchraums ist im Bereich der Turbomaschinenoptimierung
 sehr hoch.
 Typische Parameterzahlen findet man bspw.
 in der Arbeit von Voss mit 50 Parametern 
\begin_inset CommandInset citation
LatexCommand cite
key "Voss2014"

\end_inset

 oder bis zu 230 Parametern in der Arbeit von Siller 
\begin_inset CommandInset citation
LatexCommand cite
key "Siller2009"

\end_inset

.
 Berechnet man die Anzahl der Ecken eines solchen Hyperwürfels, so bekommt
 man für eine Dimension von 50 eine Anzahl von ca.
 
\begin_inset Formula $10^{15}$
\end_inset

 Ecken, bei 230 Parametern liegt die Anzahl bei ca.
 
\begin_inset Formula $10^{69}$
\end_inset

.
 Einen Suchraum dieser Größe ausreichend abzutasten, ist bei den vorhandenen
 Prozesskettenzeiten unmöglich.
 Der Optimierungsprozess muss speziell für eine so große Parameteranzahl
 ausgelegt sein, um ausgehend von einer Initialisierung möglichst schnell
 Verbesserungen zu finden.
\end_layout

\begin_layout Standard
Für weitere Informationen bieten folgende Literaturstellen einen umfassenden
 Vergleich verschiedenster Optimierungsverfahren im Bereich der Turbomaschinen:
  
\begin_inset CommandInset citation
LatexCommand cite
key "Muller-Tows2000,Shahpar2000,Bellman1972,ehrgott2005multicriteria,Gian2006,miettinen2012nonlinear,Spiegel2000"

\end_inset

.
\end_layout

\begin_layout Section
Automatisierte Optimierung im DLR
\begin_inset CommandInset label
LatexCommand label
name "sec:Automatisierte-Optimierung-imDLR"

\end_inset


\end_layout

\begin_layout Standard
Auf die Optimierungssoftware AutoOpti wurde bereits Bezug genommen.
 Daher wird in diesem Abschnitt soll der bisherige Stand von AutoOpti dokumentie
rt und erläutert.
 Dies ist notwendig, da die hier entwickelten Verfahren innerhalb dieser
 Optimierungsumgebung implementiert wurden.
 
\end_layout

\begin_layout Standard
Der erste Teil erläutert den grundlegenden Ablauf einer Optimierung mit
 AutoOpti.
 Im darauffolgenden zweiten Teil wird dann die Verwendung von Ersatzmodellen
 innerhalb von AutoOpti beschrieben.
 
\end_layout

\begin_layout Subsection
Grundlegender Optimierungsprozess 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Grundlegender-Optimierungsprozes"

\end_inset


\end_layout

\begin_layout Standard
Eine automatisierte Optimierung, wie sie im DLR ausgeführt wird, basiert
 auf der Evolutionsstrategie 
\begin_inset CommandInset citation
LatexCommand cite
key "Rechenberg1973"

\end_inset

.
 Diese ist ein stochastisches Optimierungsverfahren, welches kaum Voraussetzunge
n (z.B.
 Differenzierbarkeit oder Stetigkeit) an die Zielfunktion stellt.
 Die Abstiegsrichtung wird durch zufällige Tastschritte in der näheren Umgebung
 bekannter Individuen bestimmt.
 
\end_layout

\begin_layout Standard
Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:OptiStandardProcess"

\end_inset

 zeigt den zugrundeliegenden Optimierungsablauf, bei dem es sich im Wesentlichen
 um eine Endlosschleife handelt.
 Innerhalb dieses Kreislaufes gibt es verschiedene Arten von Prozessen,
 welche über eine asynchrone Kommunikation verfügen.
 
\end_layout

\begin_layout Standard
Dies bedeutet, dass die Berechnungen in der Prozesskette und die Datenbankverwal
tung sowie die Erzeugung neuer Individuen unabhängig voneinander agieren.
 Um solch ein asynchrones Verfahren umzusetzen, bedient sich AutoOpti eines
 Master-/Slave-Ansatzes.
 Hierfür sind grundlegend zwei verschiedene Arten von Prozessen vorgesehen:
\end_layout

\begin_layout Itemize
Der Master-Prozess ist für die Verwaltung und Steuerung der Optimierung
 zuständig.
 
\end_layout

\begin_layout Itemize
Die Slave-Prozesse dienen zur Berechnung der Prozesskette und werden vom
 Master-Prozess gestartet und gesteuert.
 Meist wird innerhalb einer Prozesskette eine Geometrie erzeugt und diese
 dann mit den numerischen Simulationsverfahren bewertet.
 Damit übernehmen die Slave-Prozesse den numerisch aufwendigen Teil der
 Optimierung.
 
\end_layout

\begin_layout Standard
Der in Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:OptiStandardProcess"

\end_inset

 dargestellte Ablauf einer AutoOpti-Optimierung soll im Folgenden genauer
 erläutert werden.
 
\end_layout

\begin_layout Paragraph*
1.
 Initialisierungsphase:
\end_layout

\begin_layout Standard
\begin_inset Wrap figure
lines 0
placement o
overhang 0col%
width "50col%"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../images/Opti.eps
	width 40page%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:OptiStandardProcess"

\end_inset

Prozesskette des genetischen Algorithmus in AutoOpti
\end_layout

\end_inset


\end_layout

\end_inset

Der hier beschriebe initiale Schritt ist in Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:OptiStandardProcess"

\end_inset

 nicht dargestellt, da diese nur den zyklischen Teil des Optimierungsprozesses
 beschreibt.
 Während dieser Initialisierungsphase spielt die Minimierung der Zielfunktionen
 noch keine Rolle.
 Ziel ist es vielmehr, ein möglichst breites Spektrum an konvergenten Individuen
 zu erzeugen und damit einen möglichst großen Parameterbereich abzudecken.
 Hierfür bietet AutoOpti diverse Verfahren an:
\end_layout

\begin_layout Itemize
Zufällige Variation der freien Variablen
\end_layout

\begin_layout Itemize
Latin-Hypercube-Sampling (siehe McKay et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "McKay1979"

\end_inset

)
\end_layout

\begin_layout Itemize
Mutation eines initialen Individuums
\end_layout

\begin_layout Standard
Das erste Verfahren erzeugt zufällige, gleichverteilte Parametersätze, wobei
 die Parameter jeweils einzeln und vollkommen unabhängig voneinander bestimmt
 werden.
 Bei einfachen Optimierungen ist diese Art der initialien Erzeugung oftmals
 ausreichend.
\end_layout

\begin_layout Standard
Das Latin-Hypercube-Verfahren versucht den gegebenen Parameterraum möglichst
 raumfüllend abzutasten und ist auch in hochdimensionalen Räumen anwendbar.
 
\end_layout

\begin_layout Standard
Beide Verfahren erscheinen nur dann sinnvoll, wenn zumindest ein gewisser
 Prozentsatz das erzeugte Individuum die Prozesskette erfolgreich durchläuft.
 Bei den hier behandelten Turbomaschinenoptimierungen ist dies oft aber
 nicht der Fall.
 
\end_layout

\begin_layout Standard
Eine mögliche Lösung bietet das dritte Verfahren.
 Dafür muss ein initiales Individuum bekannt sein, welcher die Prozesskette
 erfolgreich durchläuft.
 Dieser initiale Parametersatz wird dann immer wieder mutiert und evaluiert.
 Da sich diese Art der Suche nur lokal um den initialen Parametersatz bewegt,
 kann meist eine ausreichende Quote von erfolgreichen Prozesskettendurchläufen
 erreicht werden.
 
\end_layout

\begin_layout Paragraph*
2.
 Erzeugung neuer Parametersätze:
\end_layout

\begin_layout Standard
Der eigentliche Optimierungsprozess startet nach der Initialisierungsphase
 mit der bereits erzeugten initialen Datenbank.
 Der Master-Prozess erzeugt einen oder mehrere vielversprechende Parametersätze
 auf Basis der bereits vorhandenen Individuen.
 Für die Erzeugung dieser neuen Parametersätze gibt es zahlreiche Verfahren,
 welche die Geschwindigkeit und den Konvergenzverlauf der Optimierung maßgeblich
 beeinflussen.
 AutoOpti nutzt hauptsächlich eine Ersatzmodel-beschleunigte Evolutionsstrategie
 zur Erzeugung neuer Individuen.
 Diese Strategie zur Erzeugung vielversprechender Parametersätze hat sich
 in der Vergangenheit als sehr effizient und flexibel herausgestellt und
 wird in Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Ersatzmodellbeschleunigung"

\end_inset

 genauer erläutert.
 
\end_layout

\begin_layout Paragraph*
3.
 Verschicken neuer Parametersätze an die Slave-Prozesse:
\end_layout

\begin_layout Standard
Nachdem der Master-Prozess einen vielversprechenden Parametersatz generiert
 hat, muss dieser zur Berechnung an einen freien Slave-Prozess verschickt
 werden.
 Die Kommunikation findet bei AutoOpti über ein gemeinsames Dateisystem
 statt.
\end_layout

\begin_layout Paragraph*
4.
 Slave-Prozesse durchlaufen die Prozesskette:
\end_layout

\begin_layout Standard
Nachdem der Master-Prozess die neuen Parametersätze an die Slave-Prozesse
 verschickt hat, können diese die Prozesskette durchlaufen.
 Bei erfolgreicher Ausführung der Prozesskette müssen alle relevanten Ergebnisse
 in einer Datei bereit gestellt werden.
 Die gesammelten Ergebnisse werden vom Slave-Prozess eingelesen und als
 Flowparameter abgespeichert.
 Bei nicht erfolgreichen Prozessen werden diese in der Datenbank markiert
 und die bis dahin erzeugten Ergebnisse abgespeichert.
\end_layout

\begin_layout Paragraph*
5.
 Slave-Prozesse senden die Ergebnisse an den Master-Prozess:
\end_layout

\begin_layout Standard
Die Slave-Prozesse schicken die berechneten Flowparameter zurück an den
 Master-Prozess.
 Die Kommunikation findet auch hier über ein gemeinsames Dateisystem statt.
 
\end_layout

\begin_layout Paragraph*
6.
 Auswertung der Ergebnisse durch den Master-Prozess:
\end_layout

\begin_layout Standard
Aus den vom Slave bereitgestellten Flowparametern berechnet der Master-Prozess
 nun die Zielfunktionen, Nebenbedingungen und daraus auch das Gütekriterium.
 Ein möglicher Gütewert wäre hier der Paretorang (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:OptimierungsBegriffe"

\end_inset

).
 Nachdem diese Werte bestimmt worden sind, trägt der Master-Prozess das
 Individuum gemäß seiner Güte in die Datenbank ein.
 Danach springt der Master-Prozess wieder zu Punkt 2.
\end_layout

\begin_layout Subsection
Ersatzmodellbeschleunigung 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Ersatzmodellbeschleunigung"

\end_inset


\end_layout

\begin_layout Standard
Im vorhergehenden Abschnitt wurde der grundlegende Ablauf einer Optimierung
 mit AutoOpti beschrieben.
 Der zentrale Punkt der Erzeugung neuer Parametersätze wurde allerdings
 nur kurz erwähnt und soll im Folgenden genauer erklärt werden.
 Eine weit verbreitete Möglichkeit der Erzeugung neuer Individuen ist die
 Verwendung einer Evolutionsstrategie.
 Wie bereits beschrieben, verwendet die Evolutionsstrategie zufallsbasierte
 Tastschritte in der unmittelbaren Nähe bekannter Individuen.
 Typische Operatoren um die zufallsbasierte Änderung von Parametern vorzunehmen,
 sind z.B.
 Mutation oder Kreuzung von Individuen.
 Dies führt jedoch dazu, dass die erreichten Verbesserungen eher klein sind.
 Um größere Fortschritte zu erreichen, sind meist sehr viele Tastschritte
 und damit Funktionsauswertungen notwendig.
 In der Kombination mit den großen Parameterräumen und langen Prozesskettenzeite
n wäre eine solche Optimierung nicht mehr rentabel.
 Um den Gesamtprozess zu beschleunigen, versucht man die Individuenerzeugung
 im Master-Prozess (siehe Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:OptiStandardProcess"

\end_inset

) zu verbessern.
 Es sollen zielgerichtet neue Individuen erzeugt werden, die eine möglichst
 große Verbesserung der Zielfunktionen versprechen und zusätzlich alle Nebenbedi
ngungen erfüllen.
 
\end_layout

\begin_layout Standard
Ein weit verbreitetes Mittel hierfür sind Ersatzmodelle oder auch Metamodelle.
 Dabei handelt es sich um relativ schnell auszuwertende mathematische Modelle,
 welche vorhandene Daten approximieren oder interpolieren.
 Die Ersatzmodelle werden innerhalb einer Optimierung dafür verwendet, Vorhersag
en der Zielfunktionen und Nebenbedingungen zu treffen und damit besonders
 aussichtsreiche Parametersätze zu finden.
 Die Erzeugung kann dann z.B.
 durch eine zusätzliche Optimierung auf den Ersatzmodellen erfolgen.
 Das aussichtsreichste Individuum wird anschließend mit der echten, zeitaufwendi
gen Prozesskette nachgerechnet und danach in die Optimierungsdatenbank eingetrag
en und den Ersatzmodellen als zusätzliche Stützstelle hinzugefügt.
 Dieses Verfahren bietet die Möglichkeit, den Optimierungsfortschritt stark
 zu beschleunigen.
 Wie stark, hängt von der Güte und Leistungsfähigkeit des verwendeten Modells
 ab.
 Mithilfe von Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:ErsatzmodellOpti"

\end_inset

 soll der in AutoOpti verwendete Prozess zur Nutzung von Ersatzmodellen
 genauer beschrieben werden.
\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../images/Opti_Surrogate2.eps
	scale 60

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "23col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Nutzung von Ersatzmodellen im Optimierungsprozess
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../images/Opti_Surrogate2.eps
	scale 60

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:ErsatzmodellOpti"

\end_inset

Nutzung von Ersatzmodellen im Optimierungsprozess
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph*
1.
 Training der Ersatzmodelle:
\end_layout

\begin_layout Standard
Die in AutoOpti verwendeten Ersatzmodelle sind bayesisch trainierte neuronale
 Netzwerke 
\begin_inset CommandInset citation
LatexCommand citep
key "mackay1991bayesian"

\end_inset

 und verschiedene Kriging-Verfahren (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Die-Kriging-Verfahren"

\end_inset

).
 Die Kriging-Verfahren haben sich als Standard in AutoOpti etabliert, da
 diese robust zuverlässige Vorhersagen liefern.
 
\end_layout

\begin_layout Standard
Jedes dieser Verfahren benötigt ein Training, welches oftmals als Lernverfahren
 bezeichnet wird.
 Es dient zur Bestimmung von ersatzmodellspezifischen Parametern, wie z.B.
 Korrelationslängen, Gewichte, Skalierungsfaktoren usw..
 Die Ersatzmodellparameter werden mithilfe der vorhandenen Daten eingestellt,
 um möglichst gute Vorhersagen zu erlangen.
 Meistens sind diese Trainingsverfahren sehr aufwendig und benötigen je
 nach Typ des Ersatzmodells und der Anzahl an Stützstellen viel Zeit.
 Nach dem Training können die Ersatzmodelle für Vorhersagen der trainierten
 Funktion verwendet werden, wobei die benötigten Vorhersagezeiten gegenüber
 der Trainings- oder Prozesskettenzeiten zu vernachlässigen sind (siehe
 Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Die-Kriging-Verfahren"

\end_inset

).
\end_layout

\begin_layout Standard
In AutoOpti werden für jede Zielfunktion und Nebenbedingung seperate Ersatzmodel
le trainiert.
 Bei aus mehreren 
\begin_inset Quotes gld
\end_inset

Flowparametern
\begin_inset Quotes grd
\end_inset

 zusammengesetzten Zielfunktionen wird für jeden in der Zielfunktion verwendeten
 Flowparameter ebenfalls ein Ersatzmodell trainiert und aus den einzelnen
 Vorhersagen der Zielfunktionswert berechnet.
 
\end_layout

\begin_layout Standard
Das Training kann entweder synchron durch den Master-Prozess geschehen oder
 asynchron durch einen eigenen Prozess.
 Bei der synchronen Variante trainiert der Master-Prozess die Ersatzmodelle
 und ist in dieser Zeit blockiert.
 Wird in dieser Zeit ein Slave-Prozess frei, so muss dieser warten bis das
 Training beendet ist.
\end_layout

\begin_layout Standard
Bei der asynchronen Variante wird das Training in einem externen Prozess
 gestartet und der Master-Prozess verwendet für die Vorhersagen dann die
 jeweils vorliegenden Modelle.
 
\end_layout

\begin_layout Paragraph*
2.
 Optimierung auf den Ersatzmodellen:
\end_layout

\begin_layout Standard
Ist das Training abgeschlossen, wird eine eigene Optimierung auf den Ersatzmodel
len gestartet, wobei die Ersatzmodelle die Prozesskette ersetzen.
 Da die Funktionsauswertungen auf den Ersatzmodellen um Größenordnungen
 schneller sind als die Prozesskette selbst, nimmt dieser Schritt wenig
 Zeit in Anspruch.
 Ziel der Optimierung auf den Ersatzmodellen ist es, einen vielversprechenden
 Parametersatz zu finden, welcher die Zielfunktionen möglichst stark verbessert
 und zudem eine hohe Wahrscheinlichkeit besitzt, alle Nebenbedingungen einzuhalt
en.
 
\end_layout

\begin_layout Paragraph*
3.
 Auswahl der vielversprechendsten Individuen:
\begin_inset CommandInset label
LatexCommand label
name "subsec:EVG"

\end_inset


\end_layout

\begin_layout Standard
Meistens werden in Turbomaschinenoptimierungen mehrere Zielfunktionen und
 Nebenbedingungen verwendet.
 Dies führt dazu, dass bei der Optimierung auf den Ersatzmodellen mehrere
 vielversprechende Parametersätze generiert werden.
 Bei der Verwendung eines Gütekriteriums wie dem Paretorang würden viele
 Parametersätze mit dem Paretorang Eins erzeugt werden und könnten untereinander
 nicht weiter gewichtet werden.
 Für die Optimierung auf dem Ersatzmodell ist also ein Gütekriterium zu
 bevorzugen, welches mehrere Zielfunktionen und Nebenbedingungen vereint
 und auch den zu erwartenden Optimierungsfortschritt zu einer bestehenden
 Paretofront genauer quantifizieren kann.
 In AutoOpti findet dafür das 
\begin_inset Quotes gld
\end_inset

Expected Volume Gain
\begin_inset Quotes grd
\end_inset

 als Gütekriterium Anwendung.
 Dieses Kriterium berechnet den zu erwartenden Volumenzugewinn von einem
 vorhergesagten Individuum zu einer bereits vorhandenen Paretofront unter
 Berücksichtung von bereits rechnenden Individuen.
 
\end_layout

\begin_layout Standard
Ein großer Vorteil bei diesem Verfahren ist die Berücksichtigung der Unsicherhei
ten der Vorhersage.
 Bei statistischen Ersatzmodellen werden Erwartungswerte und auch Varianzen
 für die Zielgrößen vorhergesagt.
 Bleiben die Varianzen hierbei unberücksichtigt, kann dies zu einer ungeeigneten
 Individuen-Auswahl führen (vgl.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Forrester2008"

\end_inset

).
 Zum Beispiel neigen die in Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Die-Kriging-Verfahren"

\end_inset

 vorgestellten Kriging-Verfahren dazu, in Bereichen des Raums mit niedriger
 Stützstellendichte einen Erwartungswert mit einer großen Varianz vorherzusagen.
 Da die globalen Erwartungswerte in der Regel nicht das Optimum darstellen,
 würde ohne Berücksichtigung der Varianz kein Verbesserungspotential erkannt
 werden.
 Da die Entwicklung dieses EVG-Verfahrens nicht Teil dieser Arbeit ist und
 eine adäquate Beschreibung zu viel Platz in Anspruch nehmen würde, sei
 der interessierte Leser hierfür auf folgende Literaturstellen verwiesen:
 
\begin_inset CommandInset citation
LatexCommand cite
key "AULICH,Jones1998,Jones2001,keane2006statistical,emmerich2005single,emmerich2008computation"

\end_inset

 
\end_layout

\end_body
\end_document
